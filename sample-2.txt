Python Questions and Answers – Variable Names
-----------------------------------------------------------------------------------------------------------------
1. Is Python case sensitive when dealing with identifiers?
a) yes
b) no
c) machine dependent
d) none of the mentioned
Answer: a
Explanation: Case is always significant.

2. What is the maximum possible length of an identifier?
a) 31 characters
b) 63 characters
c) 79 characters
d) none of the mentioned
Answer: d
Explanation: Identifiers can be of any length.
3. Which of the following is invalid?
a) _a = 1
b) __a = 1
c) __str__ = 1
d) none of the mentioned
Answer: d
Explanation: All the statements will execute successfully but at the cost of reduced readability.
4. Which of the following is an invalid variable?
a) my_string_1
b) 1st_string
c) foo
d) _
Answer: b
Explanation: Variable names should not start with a number.
5. Why are local variable names beginning with an underscore discouraged?
a) they are used to indicate a private variables of a class
b) they confuse the interpreter
c) they are used to indicate global variables
d) they slow down execution
Answer: a
Explanation: As Python has no concept of private variables, leading underscores are used to indicate variables that must not be accessed from outside the class.


6. Which of the following is not a keyword?
a) eval
b) assert
c) nonlocal
d) pass
Answer: a
Explanation: eval can be used as a variable.
7. All keywords in Python are in _________
a) lower case
b) UPPER CASE
c) Capitalized
d) None of the mentioned
Answer: d
Explanation: True, False and None are capitalized while the others are in lower case.
8. Which of the following is true for variable names in Python?
a) unlimited length
b) all private members must have leading and trailing underscores
c) underscore and ampersand are the only two special characters allowed
d) none of the mentioned
Answer: a
Explanation: Variable names can be of any length.
9. Which of the following is an invalid statement?
a) abc = 1,000,000
b) a b c = 1000 2000 3000
c) a,b,c = 1000, 2000, 3000
d) a_b_c = 1,000,000
Answer: b
Explanation: Spaces are not allowed in variable names.

10. Which of the following cannot be a variable?
a) __init__
b) in
c) it
d) on
Answer: b
Explanation: in is a keyword.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Basic Operators
-----------------------------------------------------------------------------------------------------------------
1. Which is the correct operator for power(xy)?
a) X^y
b) X**y
c) X^^y
d) None of the mentioned
 Answer: b
Explanation: In python, power operator is x**y i.e. 2**3=8.


2. Which one of these is floor division?
a) /
b) //
c) %
d) None of the mentioned
 Answer: b
Explanation: When both of the operands are integer then python chops out the fraction part and gives you the round off value, to get the accurate answer use floor division. This is floor division. For ex, 5/2 = 2.5 but both of the operands are integer so answer of this expression in python is 2. To get the 2.5 answer, use floor division.

3. What is the order of precedence in python?
i) Parentheses
ii) Exponential
iii) Multiplication
iv) Division
v) Addition
vi) Subtraction
a) i,ii,iii,iv,v,vi
b) ii,i,iii,iv,v,vi
c) ii,i,iv,iii,v,vi
d) i,ii,iii,iv,vi,v
 Answer: a
Explanation: For order of precedence, just remember this PEMDAS (similar to BODMAS).

4. What is the answer to this expression, 22 % 3 is?
a) 7
b) 1
c) 0
d) 5
 Answer: b
Explanation: Modulus operator gives the remainder. So, 22%3 gives the remainder, that is, 1.

5. Mathematical operations can be performed on a string.
a) True
b) False
 Answer: b
Explanation: You can’t perform mathematical operation on string even if the string is in the form: ‘1234…’.



6. Operators with the same precedence are evaluated in which manner?
a) Left to Right
b) Right to Left
c) Can’t say
d) None of the mentioned
 Answer: a
Explanation: None.

7. What is the output of this expression, 3*1**3?
a) 27
b) 9
c) 3
d) 1
 Answer: c
Explanation: First this expression will solve 1**3 because exponential has higher precedence than multiplication, so 1**3 = 1 and 3*1 = 3. Final answer is 3.

8. Which one of the following has the same precedence level?
a) Addition and Subtraction
b) Multiplication, Division and Addition
c) Multiplication, Division, Addition and Subtraction
d) Addition and Multiplication
 Answer: a
Explanation: “Addition and Subtraction” are at the same precedence level. Similarly, “Multiplication and Division” are at the same precedence level. However, Multiplication and Division operators are at a higher precedence level than Addition and Subtraction operators.

9. The expression Int(x) implies that the variable x is converted to integer.
a) True
b) False
 Answer: a
Explanation: None.


10. Which one of the following has the highest precedence in the expression?
a) Exponential
b) Addition
c) Multiplication
d) Parentheses
 Answer: d
Explanation: Just remember: PEMDAS, that is, Parenthesis, Exponentiation, Division, Multiplication, Addition, Subtraction. Note that the precedence order of Division and Multiplication is the same. Likewise, the order of Addition and Subtraction is also the same.



-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Core Data types
-----------------------------------------------------------------------------------------------------------------
1. Which of these in not a core data type?
a) Lists
b) Dictionary
c) Tuples
d) Class
 Answer: d
Explanation: Class is a user defined data type. 

2. Given a function that does not return any value, What value is thrown by default when executed in shell.
a) int
b) bool
c) void
d) None
 Answer: d
Explanation: Python shell throws a NoneType object back. 
3. What will be the output of the following Python code?
>>>str="hello">>>str[:2]>>>
a) he
b) lo
c) olleh
d) hello
 Answer: a
Explanation: We are printing only the 1st two bytes of string and hence the answer is “he”. 
4. Which of the following will run without errors?
a) round(45.8)
b) round(6352.898,2,5)
c) round()
d) round(7463.123,2,1)
 Answer: a
Explanation: Execute help(round) in the shell to get details of the parameters that are passed into the round function.
5. What is the return type of function id?
a) int
b) float
c) bool
d) dict
 Answer: a
Explanation: Execute help(id) to find out details in python shell.id returns a integer value that is unique.


6. In python we do not specify types, it is directly interpreted by the compiler, so consider the following operation to be performed.
>>>x = 13 ? 2
objective is to make sure x has a integer value, select all that apply (python 3.xx)
a) x = 13 // 2
b) x = int(13 / 2)
c) x = 13 % 2
d) All of the mentioned
 Answer: d
Explanation: // is integer operation in python 3.0 and int(..) is a type cast operator.
7. What error occurs when you execute the following Python code snippet?
apple = mango
a) SyntaxError
b) NameError
c) ValueError
d) TypeError
 Answer: b
Explanation: Mango is not defined hence name error.
8. What will be the output of the following Python code snippet?
def example(a):    a = a + '2'     a = a*2    return a>>>example("hello")
a) indentation Error
b) cannot perform mathematical operation on strings
c) hello2
d) hello2hello2
 Answer: a
Explanation: Python codes have to be indented properly.

9. What data type is the object below?
L = [1, 23, 'hello', 1]
a) list
b) dictionary
c) array
d) tuple
 Answer: a
Explanation: List data type can store any values within it.
10. In order to store values in terms of key and value we use what core data type.
a) list
b) tuple
c) class
d) dictionary
 Answer: d
Explanation: Dictionary stores values in terms of keys and values.
11. Which of the following results in a SyntaxError?
a) ‘”Once upon a time…”, she said.’
b) “He said, ‘Yes!'”
c) ‘3\’
d) ”’That’s okay”’
 Answer:  c
Explanation: Carefully look at the colons.
12. The following is displayed by a print function call. Select all of the function calls that result in this output.
tomdickharry
a) 
print('''tom

\ndick

\nharry''')

b) print(”’tomdickharry”’)
c) print(‘tom\ndick\nharry’)
d) 
print('tom

dick

harry')
 Answer: c
Explanation: The \n adds a new line.
  
13. What is the average value of the following Python code snippet?
>>>grade1 = 80>>>grade2 = 90>>>average = (grade1 + grade2) / 2
a) 85.0
b) 85.1
c) 95.0
d) 95.1
 Answer: a
Explanation: Cause a decimal value of 0 to appear as output.
14. Select all options that print.
hello-how-are-you
a) print(‘hello’, ‘how’, ‘are’, ‘you’)
b) print(‘hello’, ‘how’, ‘are’, ‘you’ + ‘-‘ * 4)
c) print(‘hello-‘ + ‘how-are-you’)
d) print(‘hello’ + ‘-‘ + ‘how’ + ‘-‘ + ‘are’ + ‘you’)
 Answer: c
Explanation: Execute in the shell.
15. What is the return value of trunc()?
a) int
b) bool
c) float
d) None
 Answer: a
Explanation: Execute help(math.trunc) to get details.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Numeric Types
-----------------------------------------------------------------------------------------------------------------
1. What is the output of print 0.1 + 0.2 == 0.3?
a) True
b) False
c) Machine dependent
d) Error
Answer: b
Explanation: Neither of 0.1, 0.2 and 0.3 can be represented accurately in binary. The round off errors from 0.1 and 0.2 accumulate and hence there is a difference of 5.5511e-17 between (0.1 + 0.2) and 0.3.

2. Which of the following is not a complex number?
a) k = 2 + 3j
b) k = complex(2, 3)
c) k = 2 + 3l
d) k = 2 + 3J
Answer: c
Explanation: l (or L) stands for long.
3. What is the type of inf?
a) Boolean
b) Integer
c) Float
d) Complex
Answer: c
Explanation: Infinity is a special case of floating point numbers. It can be obtained by float(‘inf’).
4. What does ~4 evaluate to?
a) -5
b) -4
c) -3
d) +3
Answer: a
Explanation: ~x is equivalent to -(x+1).
5. What does ~~~~~~5 evaluate to?
a) +5
b) -11
c) +11
d) -5
Answer: a
Explanation: ~x is equivalent to -(x+1).
~~x = – (-(x+1) + 1) = (x+1) – 1 = x
~~x is equivalent to x
Extrapolating further ~~~~~~x would be same as x in the final result.
In the question, x value is given as 5 and “~” is repeated 6 times. So, the correct answer for “~~~~~~5” is 5.



6. Which of the following is incorrect?
a) x = 0b101
b) x = 0x4f5
c) x = 19023
d) x = 03964
Answer: d
Explanation: Numbers starting with a 0 are octal numbers but 9 isn’t allowed in octal numbers.
7. What is the result of cmp(3, 1)?
a) 1
b) 0
c) True
d) False
Answer: a
Explanation: cmp(x, y) returns 1 if x > y, 0 if x == y and -1 if x < y.
8. Which of the following is incorrect?
a) float(‘inf’)
b) float(‘nan’)
c) float(’56’+’78’)
d) float(’12+34′)
Answer: d
Explanation: ‘+’ cannot be converted to a float.
9. What is the result of round(0.5) – round(-0.5)?
a) 1.0
b) 2.0
c) 0.0
d) Value depends on Python version
Answer: d
Explanation: The behavior of the round() function is different in Python 2 and Python 3. In Python 2, it rounds off numbers away from 0 when the number to be rounded off is exactly halfway through. round(0.5) is 1 and round(-0.5) is -1 whereas in Python 3, it rounds off numbers towards nearest even number when the number to be rounded off is exactly halfway through. See the below output.

Here’s the runtime output for Python version 2.7 interpreter.


$ python

Python 2.7.17 (default, Nov  7 2019, 10:07:09)

>>> round(0.5)

1.0

>>> round(-0.5)

-1.0

>>>


In the above output, you can see that the round() functions on 0.5 and -0.5 are moving away from 0 and hence “round(0.5) – (round(-0.5)) = 1 – (-1) = 2”
Here’s the runtime output for Python version 3.6 interpreter.


$ python3

Python 3.6.8 (default, Oct  7 2019, 12:59:55)

>>> round(0.5)

0

>>> round(-0.5)

0

>>> round(2.5)

2

>>> round(3.5)


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Precedence and Associativity – 1
-----------------------------------------------------------------------------------------------------------------
1. The value of the expressions 4/(3*(2-1)) and 4/3*(2-1) is the same.
a) True
b) False
Answer: a
Explanation: Although the presence of parenthesis does affect the order of precedence, in the case shown above, it is not making a difference. The result of both of these expressions is 1.333333333. Hence the statement is true.

2. What will be the value of the following Python expression?
4 + 3 % 5
a) 4
b) 7
c) 2
d) 0
Answer: b
Explanation: The order of precedence is: %, +. Hence the expression above, on simplification results in   4 + 3 = 7. Hence the result is 7.
3. Evaluate the expression given below if A = 16 and B = 15.
A % B // A
a) 0.0
b) 0
c) 1.0
d) 1
Answer: b
Explanation: The above expression is evaluated as: 16%15//16, which is equal to 1//16, which results in 0.


4. Which of the following operators has its associativity from right to left?
a) +
b) //
c) %
d) **
Answer: d
Explanation: All of the operators shown above have associativity from left to right, except exponentiation operator (**) which has its associativity from right to left.
5.  What will be the value of x in the following Python expression?
x = int(43.55+2/2)
a) 43
b) 44
c) 22
d) 23
Answer: b
Explanation: The expression shown above is an example of explicit conversion. It is evaluated as int(43.55+1) = int(44.55) = 44. Hence the result of this expression is 44.
6. What is the value of the following expression?
2+4.00, 2**4.0
a) (6.0, 16.0)
b) (6.00, 16.00)
c) (6, 16)
d) (6.00, 16.0)
Answer: a
Explanation: The result of the expression shown above is (6.0, 16.0). This is because the result is automatically rounded off to one decimal place. 

7. Which of the following is the truncation division operator?
a) /
b) %
c) //
d) |
Answer: c
Explanation: // is the operator for truncation division. It is called so because it returns only the integer part of the quotient, truncating the decimal part. For example: 20//3 = 6.
8. What are the values of the following Python expressions?
 2**(3**2)
 (2**3)**2
 2**3**2
a) 64, 512, 64
b) 64, 64, 64
c) 512, 512, 512
d) 512, 64, 512
Answer: d
Explanation: Expression 1 is evaluated as: 2**9, which is equal to 512. Expression 2 is evaluated as 8**2, which is equal to 64. The last expression is evaluated as 2**(3**2). This is because the associativity of ** operator is from right to left. Hence the result of the third expression is 512.
9. What is the value of the following expression?
8/4/2, 8/(4/2)
a) (1.0, 4.0)
b) (1.0, 1.0)
c) (4.0. 1.0)
d) (4.0, 4.0)
Answer: a
Explanation: The above expressions are evaluated as: 2/2, 8/2, which is equal to (1.0, 4.0).
10. What is the value of the following expression?

float(22//3+3/3)
a) 8
b) 8.0
c) 8.3
d) 8.33
Answer: b
Explanation: The expression shown above is evaluated as: float( 7+1) = float(8) = 8.0. Hence the result of this expression is 8.0.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Bitwise – 2
-----------------------------------------------------------------------------------------------------------------
1. It is not possible for the two’s complement value to be equal to the original value in any case.
a) True
b) False
Answer: b
Explanation: In most cases the value of two’s complement is different from the original value. However, there are cases in which the two’s complement value may be equal to the original value. For example, the two’s complement of 10000000 is also equal to 10000000. Hence the statement is false.
2. The one’s complement of 110010101 is:
a) 001101010
b) 110010101
c) 001101011
d) 110010100
Answer: a
Explanation: The one’s complement of a value is obtained by simply changing all the 1’s to 0’s and all the 0’s to 1’s. Hence the one’s complement of 110010101 is 001101010.

3. Bitwise _________ gives 1 if either of the bits is 1 and 0 when both of the bits are 1.
a) OR
b) AND
c) XOR
d) NOT
Answer: c
Explanation: Bitwise XOR gives 1 if either of the bits is 1 and 0 when both of the bits are 1.
4. What will be the output of the following Python expression?
4^12
a) 2
b) 4
c) 8
d) 12
Answer: c
Explanation:  ^ is the XOR operator. The binary form of 4 is 0100 and that of 12 is 1100. Therefore, 0100^1100 is 1000, which is equal to 8.


5. Any odd number on being AND-ed with ________ always gives 1. Hint: Any even number on being AND-ed with this value always gives 0.
a) 10
b) 2
c) 1
d) 0
Answer: c
Explanation: Any odd number on being AND-ed with 1 always gives 1. Any even number on being AND-ed with this value always gives 0.
6. What will be the value of the following Python expression?
 bin(10-2)+bin(12^4)
a) 0b10000
b) 0b10001000
c) 0b1000b1000
d) 0b10000b1000
Answer: d
Explanation: The output of bin(10-2) = 0b1000 and that of bin(12^4) is ob1000. Hence the output of the above expression is: 0b10000b1000.
7. Which of the following expressions can be used to multiply a given number ‘a’ by 4?
a) a<<2
b) a<<4
c) a>>2
d) a>>4
Answer: a
Explanation: Let us consider an example wherein a=2. The binary form of 2 is 0010. When we left shift this value by 2, we get 1000, the value of which is 8. Hence if we want to multiply a given number ‘a’ by 4, we can use the expression: a<<2.

8. What will be the output of the following Python code if a=10 and b =20?
a=10
b=20
a=a^b
b=a^b
a=a^b
print(a,b)
a) 10 20
b) 10 10
c) 20 10
d) 20 20
Answer: c
Explanation: The code shown above is used to swap the contents of two memory locations using bitwise X0R operator. Hence the output of the code shown above is: 20 10.
9. What is the two’s complement of -44?
a) 1011011
b) 11010100
c) 11101011
d) 10110011
Answer: b
Explanation: The binary form of -44 is 00101100. The one’s complement of this value is 11010011. On adding one to this we get: 11010100 (two’s complement).

10. What will be the output of the following Python expression?
~100?
a) 101
b) -101
c) 100
d) -100
Answer: b
Explanation: Suppose we have an expression ~A. This is evaluated as: -A – 1. Therefore, the expression ~100 is evaluated as -100 – 1, which is equal to -101.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Strings – 4
-----------------------------------------------------------------------------------------------------------------
1. What is “Hello”.replace(“l”, “e”)?
a) Heeeo
b) Heelo
c) Heleo
d) None
 Answer: a
Explanation: Execute in shell to verify. 

2. To retrieve the character at index 3 from string s=”Hello” what command do we execute (multiple answers allowed)?
a) s[] 
b) s.getitem(3)
c) s.__getitem__(3)
d) s.getItem(3)
 Answer:  c
Explanation: __getitem(..) can be used to get character at index specified as parameter. 
3. To return the length of string s what command do we execute?
a) s.__len__()
b) len(s)
c) size(s)
d) s.size()
 Answer: a
Explanation: Execute in shell to verify. 
4. If a class defines the __str__(self) method, for an object obj for the class, you can use which command to invoke the __str__ method.
a) obj.__str__()
b) str(obj)
c) print obj
d) all of the mentioned
 Answer: d
Explanation: Execute in shell to verify.
5. To check whether string s1 contains another string s2, use ________
a) s1.__contains__(s2)
b) s2 in s1
c) s1.contains(s2)
d) si.in(s2)
 Answer: a
Explanation: s2 in s1 works in the same way as calling the special function __contains__ .


6. Suppose i is 5 and j is 4, i + j is same as ________
a) i.__add(j)
b) i.__add__(j)
c) i.__Add(j)
d) i.__ADD(j)
 Answer: b
Explanation: Execute in shell to verify. 
7. What will be the output of the following Python code?
class Count:    def __init__(self, count = 0):       self.__count = count c1 = Count(2)c2 = Count(2)print(id(c1) == id(c2), end = " ") s1 = "Good"s2 = "Good"print(id(s1) == id(s2))
a) True False
b) True True
c) False True
d) False False
 Answer: c
Explanation: Execute in the shell objects cannot have same id, however in the case of strings its different.

8. What will be the output of the following Python code?
class Name:    def __init__(self, firstName, mi, lastName):        self.firstName = firstName        self.mi = mi        self.lastName = lastName firstName = "John"name = Name(firstName, 'F', "Smith")firstName = "Peter"name.lastName = "Pan"print(name.firstName, name.lastName)
a) Peter Pan
b) John Pan
c) Peter Smith
d) John Smith
 Answer: b
Explanation: Execute in the shell to verify.
9. What function do you use to read a string?
a) input(“Enter a string”)
b) eval(input(“Enter a string”))
c) enter(“Enter a string”)
d) eval(enter(“Enter a string”))
 Answer: a
Explanation: Execute in shell to verify.

10. Suppose x is 345.3546, what is format(x, “10.3f”) (_ indicates space).
a) __345.355
b) ___345.355
c) ____345.355
d) _____345.354
 Answer: b
Explanation: Execute in the shell to verify.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Lists – 1
-----------------------------------------------------------------------------------------------------------------
1. Which of the following commands will create a list?
a) list1 = list()
b) list1 = [] 
c) list1 = list([1, 2, 3])
d) all of the mentioned
 Answer: d
Explanation: Execute in the shell to verify

2. What is the output when we execute list(“hello”)?
a) [‘h’, ‘e’, ‘l’, ‘l’, ‘o’] 
b) [‘hello’] 
c) [‘llo’] 
d) [‘olleh’] 
 Answer: a
Explanation: Execute in the shell to verify. 
3. Suppose listExample is [‘h’,’e’,’l’,’l’,’o’], what is len(listExample)?
a) 5
b) 4
c) None
d) Error
 Answer: a
Explanation: Execute in the shell and verify. 
4. Suppose list1 is [2445,133,12454,123], what is max(list1)?
a) 2445
b) 133
c) 12454
d) 123
 Answer: c
Explanation: Max returns the maximum element in the list.
5. Suppose list1 is [3, 5, 25, 1, 3], what is min(list1)?
a) 3
b) 5
c) 25
d) 1
 Answer: d
Explanation: Min returns the minimum element in the list.


6. Suppose list1 is [1, 5, 9], what is sum(list1)?
a) 1
b) 9
c) 15
d) Error
 Answer: c
Explanation: Sum returns the sum of all elements in the list. 
7. To shuffle the list(say list1) what function do we use?
a) list1.shuffle()
b) shuffle(list1)
c) random.shuffle(list1)
d) random.shuffleList(list1)
 Answer: c
Explanation: Execute in the shell to verify.
8. Suppose list1 is [4, 2, 2, 4, 5, 2, 1, 0], Which of the following is correct syntax for slicing operation?
a) print(list1[0])
b) print(list1[:2])
c) print(list1[:-2])
d) all of the mentioned
 Answer: d
Explanation: Slicing is allowed in lists just as in the case of strings.
9. Suppose list1 is [2, 33, 222, 14, 25], What is list1[-1]?
a) Error
b) None
c) 25
d) 2
 Answer: c
Explanation: -1 corresponds to the last index in the list.

10. Suppose list1 is [2, 33, 222, 14, 25], What is list1[:-1]?
a) [2, 33, 222, 14] 
b) Error
c) 25
d) [25, 14, 222, 33, 2] 
 Answer: a
Explanation: Execute in the shell to verify.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Lists – 3
-----------------------------------------------------------------------------------------------------------------
1. Suppose list1 is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after list1.reverse()?
a) [3, 4, 5, 20, 5, 25, 1, 3] 
b) [1, 3, 3, 4, 5, 5, 20, 25] 
c) [25, 20, 5, 5, 4, 3, 3, 1] 
d) [3, 1, 25, 5, 20, 5, 4, 3] 
 Answer: d
Explanation: Execute in the shell to verify.

2. Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.extend([34, 5])?
a) [3, 4, 5, 20, 5, 25, 1, 3, 34, 5] 
b) [1, 3, 3, 4, 5, 5, 20, 25, 34, 5] 
c) [25, 20, 5, 5, 4, 3, 3, 1, 34, 5] 
d) [1, 3, 4, 5, 20, 5, 25, 3, 34, 5] 
 Answer: a
Explanation: Execute in the shell to verify. 
3. Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.pop(1)?
a) [3, 4, 5, 20, 5, 25, 1, 3] 
b) [1, 3, 3, 4, 5, 5, 20, 25] 
c) [3, 5, 20, 5, 25, 1, 3] 
d) [1, 3, 4, 5, 20, 5, 25] 
 Answer: c
Explanation: pop() removes the element at the position specified in the parameter. 
4. Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.pop()?
a) [3, 4, 5, 20, 5, 25, 1] 
b) [1, 3, 3, 4, 5, 5, 20, 25] 
c) [3, 5, 20, 5, 25, 1, 3] 
d) [1, 3, 4, 5, 20, 5, 25] 
 Answer: a
Explanation: pop() by default will remove the last element.
5. What will be the output of the following Python code?


>>>"Welcome to Python".split()
a) [“Welcome”, “to”, “Python”] 
b) (“Welcome”, “to”, “Python”)
c) {“Welcome”, “to”, “Python”}
d) “Welcome”, “to”, “Python”
 Answer: a
Explanation: split() function returns the elements in a list.
6. What will be the output of the following Python code?
>>>list("a#b#c#d".split('#'))
a) [‘a’, ‘b’, ‘c’, ‘d’] 
b) [‘a b c d’] 
c) [‘a#b#c#d’] 
d) [‘abcd’] 
 Answer: a
Explanation: Execute in the shell to verify. 

7. What will be the output of the following Python code?
myList = [1, 5, 5, 5, 5, 1]max = myList[0]indexOfMax = 0for i in range(1, len(myList)):    if myList[i] > max:        max = myList[i]        indexOfMax = i >>>print(indexOfMax)
a) 1
b) 2
c) 3
d) 4
 Answer: a
Explanation: First time the highest number is encountered is at index 1.
8. What will be the output of the following Python code?
myList = [1, 2, 3, 4, 5, 6]for i in range(1, 6):    myList[i - 1] = myList[i] for i in range(0, 6):     print(myList[i], end = " ")
a) 2 3 4 5 6 1
b) 6 1 2 3 4 5
c) 2 3 4 5 6 6
d) 1 1 2 3 4 5
 Answer: c
Explanation: Execute in the shell to verify.

9. What will be the output of the following Python code?
>>>list1 = [1, 3]>>>list2 = list1>>>list1[0] = 4>>>print(list2)
a) [1, 3] 
b) [4, 3] 
c) [1, 4] 
d) [1, 3, 4] 
 Answer: b
Explanation: Lists should be copied by executing [:] operation.
10. What will be the output of the following Python code?
def f(values):    values[0] = 44 v = [1, 2, 3]f(v)print(v)
a) [1, 44] 
b) [1, 2, 3, 44] 
c) [44, 2, 3] 
d) [1, 2, 3] 
 Answer: c
Explanation: Execute in the shell to verify.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – List Comprehension – 2
-----------------------------------------------------------------------------------------------------------------
1. Read the information given below carefully and write a list comprehension such that the output is: [‘e’, ‘o’]


w="hello"
v=('a', 'e', 'i', 'o', 'u')
a) [x for w in v if x in v]
b) [x for x in w if x in v]
c) [x for x in v if w in v]
d) [x for v in w for x in w]
Answer: b
Explanation: The tuple ‘v’ is used to generate a list containing only vowels in the string ‘w’. The result is a list containing only vowels present in the string “hello”. Hence the required list comprehension is: [x for x in w if x in v].
2. What will be the output of the following Python code?
[ord(ch) for ch in 'abc']
a) [97, 98, 99]
b) [‘97’, ‘98’, ‘99’]
c) [65, 66, 67]
d) Error
Answer: a
Explanation: The list comprehension shown above returns the ASCII value of each alphabet of the string ‘abc’. Hence the output is: [97, 98, 99]. Had the string been ‘ABC’, the output would be: [65, 66, 67].


3. What will be the output of the following Python code?
t=32.00
[round((x-32)*5/9) for x in t]
a) [0]
b) 0
c) [0.00]
d) Error
Answer: d
Explanation: The value of t in the code shown above is equal to 32.00, which is a floating point value. ‘Float’ objects are not iterable. Hence the code results in an error.
4. Write a list comprehension for producing a list of numbers between 1 and 1000 that are divisible by 3.
a) [x in range(1, 1000) if x%3==0]
b) [x for x in range(1000) if x%3==0]
c) [x%3 for x in range(1, 1000)]
d) [x%3=0 for x in range(1, 1000)]
Answer: b
Explanation: The list comprehension [x for x in range(1000) if x%3==0] produces a list of numbers between 1 and 1000 that are divisible by 3.

5. Write a list comprehension equivalent for the Python code shown below.
for i in range(1, 101):
	if int(i*0.5)==i*0.5:
		print(i)
a) [i for i in range(1, 100) if int(i*0.5)==(i*0.5)]
b) [i for i in range(1, 101) if int(i*0.5)==(i*0.5)]
c) [i for i in range(1, 101) if int(i*0.5)=(i*0.5)]
d) [i for i in range(1, 100) if int(i*0.5)=(i*0.5)]
Answer: b
Explanation: The code shown above prints the value ‘i’ only if it satisfies the condition: int(i*0.5) is equal to (i*0.5). Hence the required list comprehension is: [i for i in range(1, 101) if int(i*0.5)==(i*0.5)].
6. What is the list comprehension equivalent for: list(map(lambda x:x**-1, [1, 2, 3]))?
a) [1|x for x in [1, 2, 3]]
b) [-1**x for x in [1, 2, 3]]
c) [x**-1 for x in [1, 2, 3]]
d) [x^-1 for x in range(4)]
Answer: c
Explanation: The output of the function list(map(lambda x:x**-1, [1, 2, 3])) is [1.0, 0.5, 0.3333333333333333] and that of the list comprehension [x**-1 for x in [1, 2, 3]] is [1.0, 0.5, 0.3333333333333333]. Hence the answer is: [x**-1 for x in [1, 2, 3]].
7. Write a list comprehension to produce the list: [1, 2, 4, 8, 16……212].
a) [(2**x) for x in range(0, 13)]
b) [(x**2) for x in range(1, 13)]
c) [(2**x) for x in range(1, 13)]
d) [(x**2) for x in range(0, 13)]
Answer: a
Explanation: The required list comprehension will print the numbers from 1 to 12, each raised to 2. The required answer is thus, [(2**x) for x in range(0, 13)].

8. What is the list comprehension equivalent for?
{x : x is a whole number less than 20, x is even}    (including zero)
a) [x for x in range(1, 20) if (x%2==0)]
b) [x for x in range(0, 20) if (x//2==0)]
c) [x for x in range(1, 20) if (x//2==0)]
d) [x for x in range(0, 20) if (x%2==0)]
Answer: d
Explanation: The required list comprehension will print a whole number, less than 20, provided that the number is even. Since the output list should contain zero as well, the answer to this question is: [x for x in range(0, 20) if (x%2==0)].
9. What will be the output of the following Python list comprehension?
[j for i in range(2,8) for j in range(i*2, 50, i)]
a) A list of prime numbers up to 50
b) A list of numbers divisible by 2, up to 50
c) A list of non prime numbers, up to 50
d) Error
Answer: c
Explanation: The list comprehension shown above returns a list of non-prime numbers up to 50. The logic behind this is that the square root of 50 is almost equal to 7. Hence all the multiples of 2-7 are not prime in this range.
10. What will be the output of the following Python code?
l=["good", "oh!", "excellent!", "#450"]
[n for n in l if n.isalpha() or n.isdigit()]
a) [‘good’, ‘oh’, ‘excellent’, ‘450’	]
b) [‘good’]
c) [‘good’, ‘#450’]
d) [‘oh!’, ‘excellent!’, ‘#450’]
Answer: b
Explanation: The code shown above returns a new list containing only strings which do not have any punctuation in them. The only string from the list which does not contain any punctuation is ‘good’. Hence the output of the code shown above is [‘good’].



-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Tuples – 1
-----------------------------------------------------------------------------------------------------------------
1. Which of the following is a Python tuple?
a) [1, 2, 3] 
b) (1, 2, 3)
c) {1, 2, 3}
d) {}
 Answer: b
Explanation: Tuples are represented with round brackets.

2. Suppose t = (1, 2, 4, 3), which of the following is incorrect?
a) print(t[3])
b) t[3] = 45
c) print(max(t))
d) print(len(t))
 Answer: b
Explanation: Values cannot be modified in the case of tuple, that is, tuple is immutable. 
3. What will be the output of the following Python code?
>>>t=(1,2,4,3)>>>t[1:3]
a) (1, 2)
b) (1, 2, 4)
c) (2, 4)
d) (2, 4, 3)
 Answer: c
Explanation: Slicing in tuples takes place just as it does in strings. 
4. What will be the output of the following Python code?
>>>t=(1,2,4,3)>>>t[1:-1]
a) (1, 2)
b) (1, 2, 4)
c) (2, 4)
d) (2, 4, 3)
 Answer: c
Explanation: Slicing in tuples takes place just as it does in strings.


5. What will be the output of the following Python code?
>>>t = (1, 2, 4, 3, 8, 9)>>>[t[i] for i in range(0, len(t), 2)]
a) [2, 3, 9] 
b) [1, 2, 4, 3, 8, 9] 
c) [1, 4, 8] 
d) (1, 4, 8)
 Answer: c
Explanation: Execute in the shell to verify.
6. What will be the output of the following Python code?
d = {"john":40, "peter":45}d["john"]
a) 40
b) 45
c) “john”
d) “peter”
 Answer: a
Explanation: Execute in the shell to verify. 

7. What will be the output of the following Python code?
>>>t = (1, 2)>>>2 * t
a) (1, 2, 1, 2)
b) [1, 2, 1, 2] 
c) (1, 1, 2, 2)
d) [1, 1, 2, 2] 
 Answer: a
Explanation: * operator concatenates tuple.
8. What will be the output of the following Python code?
>>>t1 = (1, 2, 4, 3)>>>t2 = (1, 2, 3, 4)>>>t1 < t2
a) True
b) False
c) Error
d) None
 Answer: b
Explanation: Elements are compared one by one in this case.
9. What will be the output of the following Python code?
>>>my_tuple = (1, 2, 3, 4)>>>my_tuple.append( (5, 6, 7) )>>>print len(my_tuple)
a) 1
b) 2
c) 5
d) Error
 Answer: d
Explanation: Tuples are immutable and don’t have an append method. An exception is thrown in this case.

10. What will be the output of the following Python code?
numberGames = {}numberGames[(1,2,4)] = 8numberGames[(4,2,1)] = 10numberGames[(1,2)] = 12sum = 0for k in numberGames:    sum += numberGames[k]print len(numberGames) + sum
a) 30
b) 24
c) 33
d) 12
 Answer: c
Explanation: Tuples can be used for keys into dictionary. The tuples can have mixed length and the order of the items in the tuple is considered when comparing the equality of the keys.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Tuples – 2
-----------------------------------------------------------------------------------------------------------------
1.	What is the data type of (1)?
a)	Tuple
b)	Integer
c)	List
d)	Both tuple and integer
Answer: b
Explanation: A tuple of one element must be created as (1,).

2.	If a=(1,2,3,4), a[1:-1] is _________
a)	Error, tuple slicing doesn’t exist
b)	[2,3] 
c)	(2,3,4)
d)	(2,3)
Answer: d
Explanation: Tuple slicing exists and a[1:-1] returns (2,3).
3.	What will be the output of the following Python code?
>>> a=(1,2,(4,5))
>>> b=(1,2,(3,4))
>>> a<b
a)	False
b)	True
c)	Error, < operator is not valid for tuples
d)	Error, < operator is valid for tuples but not if there are sub-tuples
Answer: a
Explanation: Since the first element in the sub-tuple of a is larger that the first element in the subtuple of b, False is printed.
4.	What will be the output of the following Python code?
>>> a=("Check")*3
>>> a
a)  (‘Check’,’Check’,’Check’)
b) * Operator not valid for tuples
c)  (‘CheckCheckCheck’)
d) Syntax error
Answer: c
Explanation: Here (“Check”) is a string not a tuple because there is no comma after the element.


5.	What will be the output of the following Python code?
>>> a=(1,2,3,4)
>>> del(a[2])
a)	Now, a=(1,2,4)
b)	Now, a=(1,3,4)
c)	Now a=(3,4)
d)	Error as tuple is immutable
Answer: d
Explanation: ‘tuple’ object doesn’t support item deletion.
6.	What will be the output of the following Python code?
>>> a=(2,3,4)
>>> sum(a,3)
a)	Too many arguments for sum() method
b)	The method sum() doesn’t exist for tuples
c)	12
d)	9
Answer: c
Explanation: In the above case, 3 is the starting value to which the sum of the tuple is added to.

7.	Is the following Python code valid?
>>> a=(1,2,3,4)
>>> del a
a)	No because tuple is immutable
b)	Yes, first element in the tuple is deleted
c)	Yes, the entire tuple is deleted
d)	No, invalid syntax for del method
Answer: c
Explanation: The command del a deletes the entire tuple.
8.	What type of data is: a=[(1,1),(2,4),(3,9)]?
a)	Array of tuples
b)	List of tuples
c)	Tuples of lists
d)	Invalid type
Answer: b
Explanation: The variable a has tuples enclosed in a list making it a list of tuples.
9.	What will be the output of the following Python code?
>>> a=(0,1,2,3,4)
>>> b=slice(0,2)
>>> a[b]
a)	Invalid syntax for slicing
b)	[0,2] 
c)	(0,1)
d)	(0,2)
Answer: c
Explanation: The method illustrated in the above piece of code is that of naming of slices.
10.	Is the following Python code valid?

>>> a=(1,2,3)
>>> b=('A','B','C')
>>> c=tuple(zip(a,b))
a)	Yes, c will be ((1, ‘A’), (2, ‘B’), (3, ‘C’))
b)	Yes, c will be ((1,2,3),(‘A’,’B’,’C’))
c)	No because tuples are immutable
d)	No because the syntax for zip function isn’t valid
Answer: a
Explanation: Zip function combines individual elements of two iterables into tuples. Execute in Python shell to verify.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Sets – 1
-----------------------------------------------------------------------------------------------------------------
1.	Which of these about a set is not true?
a)	Mutable data type
b)	Allows duplicate values
c)	Data type with unordered values
d)	Immutable data type
Answer: d
Explanation: A set is a mutable data type with non-duplicate, unordered values, providing the usual mathematical set operations. 

2.	Which of the following is not the correct syntax for creating a set?
a)	set([[1,2],[3,4]])
b)	set([1,2,2,3,4])
c)	set((1,2,3,4))
d)	{1,2,3,4}
Answer: a
Explanation: The argument given for the set must be an iterable.
3.	What will be the output of the following Python code?
nums = set([1,1,2,3,3,3,4,4])
print(len(nums))
a)	7
b)	Error, invalid syntax for formation of set
c)	4
d)	8
Answer: c
Explanation:  A set doesn’t have duplicate items. 
4.  What will be the output of the following Python code?
a = [5,5,6,7,7,7]
b = set(a)
def test(lst):
    if lst in b:
        return 1
    else:
        return 0
for i in  filter(test, a):
    print(i,end=" ")
a)	5 5 6
b)	5 6 7
c)	5 5 6 7 7 7
d)	5 6 7 7 7
Answer: c
Explanation: The filter function will return all the values from list a which are true when passed to function test. Since all the members of the set are non-duplicate members of the list, all of the values will return true. Hence all the values in the list are printed.


5.	Which of the following statements is used to create an empty set?
a)	{ }
b)	set()
c)	[ ] 
d)	( )
Answer: b
Explanation: { } creates a dictionary not a set. Only set() creates an empty set. 
6.	What will be the output of the following Python code?
>>> a={5,4}
>>> b={1,2,4,5}
>>> a<b
a)	{1,2}
b)	True
c)	False
d)	Invalid operation
Answer: b
Explanation: a<b returns True if a is a proper subset of b.
7.  If a={5,6,7,8}, which of the following statements is false?
a)	print(len(a))
b)	print(min(a))
c)	a.remove(5)
d)	a[2]=45
Answer: d
Explanation: The members of a set can be accessed by their index values since the elements of the set are unordered.
8.  If a={5,6,7}, what happens when a.add(5) is executed?
a)	a={5,5,6,7}
b)	a={5,6,7}
c)	Error as there is no add function for set data type
d)	Error as 5 already exists in the set
Answer: b
Explanation: There exists add method for set data type. However 5 isn’t added again as set consists of only non-duplicate elements and 5 already exists in the set. Execute in python shell to verify.

9.  What will be the output of the following Python code?
>>> a={4,5,6}
>>> b={2,8,6}
>>> a+b
a)	{4,5,6,2,8}
b)	{4,5,6,2,8,6}
c)	Error as unsupported operand type for sets
d)	Error as the duplicate item 6 is present in both sets
Answer: c
Explanation: Execute in python shell to verify.
10.  What will be the output of the following Python code?
>>> a={4,5,6}
>>> b={2,8,6}
>>> a-b
a)	{4,5}
b)	{6}
c)	Error as unsupported operand type for set data type
d)	Error as the duplicate item 6 is present in both sets
Answer: a
Explanation: – operator gives the set of elements in set a but not in set b. 
11.	What will be the output of the following Python code?
>>> a={5,6,7,8}
>>> b={7,8,10,11}
>>> a^b
a)	{5,6,7,8,10,11}
b)	{7,8}
c)	Error as unsupported operand type of set data type
d)	{5,6,10,11}
Answer: d
Explanation: ^ operator returns a set of elements in set A or set B, but not in both (symmetric difference). 

12. What will be the output of the following Python code?
>>> s={5,6}
>>> s*3
a)	Error as unsupported operand type for set data type
b)	{5,6,5,6,5,6}
c)	{5,6}
d)	Error as multiplication creates duplicate elements which isn’t allowed
Answer: a
Explanation: The multiplication operator isn’t valid for the set data type.
13. What will be the output of the following Python code?
>>> a={5,6,7,8}
>>> b={7,5,6,8}
>>> a==b
a)	True
b)	False
Answer: a
Explanation:  It is possible to compare two sets and the order of elements in both the sets doesn’t matter if the values of the elements are the same.
14. What will be the output of the following Python code?
>>> a={3,4,5}
>>> b={5,6,7}
>>> a|b
a)	Invalid operation
b)	{3, 4, 5, 6, 7}
c)	{5}
d)	{3,4,6,7}
Answer: b
Explanation:  The operation in the above piece of code is union operation. This operation produces a set of elements in both set a and set b.
15. Is the following Python code valid?
a={3,4,{7,5}}
print(a[2][0])
a)	Yes, 7 is printed
b)	Error, elements of a set can’t be printed
c)	Error, subsets aren’t allowed
d)	Yes, {7,5} is printed
Answer: c
Explanation: In python, elements of a set must not be mutable and sets are mutable. Thus, subsets can’t exist.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Sets – 2
-----------------------------------------------------------------------------------------------------------------
1.	Which of these about a frozenset is not true?
a)	Mutable data type
b)	Allows duplicate values
c)	Data type with unordered values
d)	Immutable data type
Answer: a
Explanation: A frozenset is an immutable data type.

2.	What is the syntax of the following Python code?
>>> a=frozenset(set([5,6,7]))
>>> a
a)	{5,6,7}
b)	frozenset({5,6,7})
c)	Error, not possible to convert set into frozenset
d)	Syntax error
Answer: b
Explanation: The above piece of code is the correct syntax for creating a frozenset.
3.	Is the following Python code valid?
>>> a=frozenset([5,6,7])
>>> a
>>> a.add(5)
a)	Yes, now a is {5,5,6,7}
b)	No, frozen set is immutable
c)	No, invalid syntax for add method
d)	Yes, now a is {5,6,7}
Answer: b
Explanation:  Since a frozen set is immutable, add method doesn’t exist for frozen method.


4.  Set members must not be hashable.
a)	True
b)	False
Answer: b
Explanation: Set members must always be hashable.
5. What will be the output of the following Python code?
>>> a={3,4,5}
>>> a.update([1,2,3])
>>> a
a)	Error, no method called update for set data type
b)	{1, 2, 3, 4, 5}
c)	Error, list can’t be added to set
d)	Error, duplicate item present in list
Answer: b
Explanation: The method update adds elements to a set.
6. What will be the output of the following Python code?
>>> a={1,2,3}
>>> a.intersection_update({2,3,4,5})
>>> a
a)	{2,3}
b)	Error, duplicate item present in list
c)	Error, no method called intersection_update for set data type
d)	{1,4,5}
Answer: a
Explanation: The method intersection_update returns a set which is an intersection of both the sets.

7. What will be the output of the following Python code?
>>> a={1,2,3}
>>> b=a
>>> b.remove(3)
>>> a
a)	{1,2,3}
b)	Error, copying of sets isn’t allowed
c)	{1,2}
d)	Error, invalid syntax for remove
Answer: c
Explanation: Any change made in b is reflected in a because b is an alias of a.
8. What will be the output of the following Python code?
>>> a={1,2,3}
>>> b=a.copy()
>>> b.add(4)
>>> a
a)	{1,2,3}
b)	Error, invalid syntax for add
c)	{1,2,3,4}
d)	Error, copying of sets isn’t allowed
Answer: a
Explanation: In the above piece of code, b is barely a copy and not an alias of a. Hence any change made in b isn’t reflected in a.
9. What will be the output of the following Python code?
>>> a={1,2,3}
>>> b=a.add(4)
>>> b
a)	0
b)	{1,2,3,4}
c)	{1,2,3}
d)	Nothing is printed
Answer: d
Explanation: The method add returns nothing, hence nothing is printed.

10. What will be the output of the following Python code?
>>> a={1,2,3}
>>> b=frozenset([3,4,5])
>>> a-b
a)	{1,2}
b)	Error as difference between a set and frozenset can’t be found out
c)	Error as unsupported operand type for set data type
d)	frozenset({1,2})
Answer: a
Explanation: – operator gives the set of elements in set a but not in set b.
11. What will be the output of the following Python code?
>>> a={5,6,7}
>>> sum(a,5)
a)	5
b)	23
c)	18
d)	Invalid syntax for sum method, too many arguments
Answer: b
Explanation: The second parameter is the start value for the sum of elements in set a. Thus, sum(a,5) = 5+(5+6+7)=23.
12. What will be the output of the following Python code?
>>> a={1,2,3}
>>> {x*2 for x in a|{4,5}}
a)	{2,4,6}
b)	Error, set comprehensions aren’t allowed
c)	{8, 2, 10, 4, 6}
d)	{8,10}
Answer: c
Explanation: Set comprehensions are allowed.
13. What will be the output of the following Python code?
>>> a={5,6,7,8}
>>> b={7,8,9,10}
>>> len(a+b)
a)	8
b)	Error, unsupported operand ‘+’ for sets
c)	6
d)	Nothing is displayed
Answer: b
Explanation:  Duplicate elements in a+b is eliminated and the length of a+b is computed.
14. What will be the output of the following Python code?
a={1,2,3}
b={1,2,3}
c=a.issubset(b)
print(c)
a)	True
b)	Error, no method called issubset() exists
c)	Syntax error for issubset() method
d)	False
Answer: a
Explanation:  The method issubset() returns True if b is a proper subset of a.
15. Is the following Python code valid?
a={1,2,3}
b={1,2,3,4}
c=a.issuperset(b)
print(c)
a)	False
b)	True
c)	Syntax error for issuperset() method
d)	Error, no method called issuperset() exists
Answer: a
Explanation:  The method issubset() returns True if b is a proper subset of a.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Sets – 4
-----------------------------------------------------------------------------------------------------------------
1. Which of the following functions will return the symmetric difference between two sets, x and y?
a) x | y
b) x ^ y
c) x & y
d) x – y
Answer: b
Explanation: The function x ^ y returns the symmetric difference between the two sets x and y. This is basically an XOR operation being performed on the two sets.

2. What will be the output of the following Python code snippet?
z=set('abc$de')
'a' in z
a) True
b) False
c) No output
d) Error
Answer: a
Explanation: The code shown above is used to check whether a particular item is a part of a given set or not. Since ‘a’ is a part of the set z, the output is true. Note that this code would result in an error in the absence of the quotes.
3. What will be the output of the following Python code snippet?
z=set('abc')
z.add('san')
z.update(set(['p', 'q']))
z
a) {‘abc’, ‘p’, ‘q’, ‘san’}
b) {‘a’, ‘b’, ‘c’, [‘p’, ‘q’], ‘san}
c) {‘a’, ‘c’, ‘c’, ‘p’, ‘q’, ‘s’, ‘a’, ‘n’}
d) {‘a’, ‘b’, ‘c’, ‘p’, ‘q’, ‘san’}
Answer: d
Explanation: The code shown first adds the element ‘san’ to the set z. The set z is then updated and two more elements, namely, ‘p’ and ‘q’ are added to it. Hence the output is: {‘a’, ‘b’, ‘c’, ‘p’, ‘q’, ‘san’}


4. What will be the output of the following Python code snippet?
s=set([1, 2, 3])
s.union([4, 5])
s|([4, 5])
a) 
   {1, 2, 3, 4, 5}

   {1, 2, 3, 4, 5}
b) 
   Error

   {1, 2, 3, 4, 5}
c) 
   {1, 2, 3, 4, 5}

   Error
d) 
   Error

   Error
Answer: c
Explanation: The first function in the code shown above returns the set {1, 2, 3, 4, 5}. This is because the method of the function union allows any iterable. However the second function results in an error because of unsupported data type, that is list and set.
  
5. What will be the output of the following Python code snippet?

for x in set('pqr'):
	print(x*2)
a) 
pp

qq

rr
b) 
pqr

pqr
c) ppqqrr
d) pqrpqr
Answer: a
Explanation: The code shown above prints each element of the set twice separately. Hence the output of this code is:
pp
qq
rr
6. What will be the output of the following Python code snippet?
{a**2 for a in range(4)}
a) {1, 4, 9, 16}
b) {0, 1, 4, 9, 16}
c) Error
d) {0, 1, 4, 9}
Answer: d
Explanation: The code shown above returns a set containing the square of values in the range 0-3, that is 0, 1, 2 and 3. Hence the output of this line of code is: {0, 1, 4, 9}.
7. What will be the output of the following Python function?

{x for x in 'abc'}
{x*3 for x in 'abc'}
a) 
    {abc}

    aaa

    bbb

    ccc
b) 
    abc

   abc abc abc
c) 
    {‘a’, ‘b’, ‘c’}

   {‘aaa’, ‘bbb’, ‘ccc’}
d) 
    {‘a’, ‘b’, ‘c’}

    abc

    abc

    abc
Answer: c
Explanation: The first function prints each element of the set separately, hence the output is: {‘a’, ‘b’, ‘c’}. The second function prints each element of the set thrice, contained in a new set. Hence the output of the second function is: {‘aaa’, ‘bbb’, ‘ccc’}.  (Note that the order may not be the same)
  
8. The output of the following code is: class<’set’>.
type({})
a) True
b) False
Answer: b
Explanation: The output of the line of code shown above is: class<’dict’>. This is because {} represents an empty dictionary, whereas set() initializes an empty set. Hence the statement is false.
9. What will be the output of the following Python code snippet?
a=[1, 4, 3, 5, 2]
b=[3, 1, 5, 2, 4]
a==b
set(a)==set(b)
a) 
   True

   False
b) 
   False

   False
c) 
   False

   True
d) 
   True

   True
Answer: c
Explanation: In the code shown above, when we check the equality of the two lists, a and b, we get the output false. This is because of the difference in the order of elements of the two lists. However, when these lists are converted to sets and checked for equality, the output is true. This is known as order-neutral equality. Two sets are said to be equal if and only if they contain exactly the same elements, regardless of order.
  
10. What will be the output of the following Python code snippet?
l=[1, 2, 4, 5, 2, 'xy', 4]
set(l)
l
a) 
{1, 2, 4, 5, 2, ‘xy’, 4}

[1, 2, 4, 5, 2, ‘xy’, 4]
b) 
{1, 2, 4, 5, ‘xy’}

[1, 2, 4, 5, 2, ‘xy’, 4]
c) 
{1, 5, ‘xy’}

[1, 5, ‘xy’]
d) 
{1, 2, 4, 5, ‘xy’}

[1, 2, 4, 5, ‘xy’]
Answer: b
Explanation: In the code shown above, the function set(l) converts the given list into a set. When this happens, all the duplicates are automatically removed. Hence the output is: {1, 2, 4, 5, ‘xy’}. On the other hand, the list l remains unchanged. Therefore the output is: [1, 2, 4, 5, 2, ‘xy’, 4].
Note that the order of the elements may not be the same.
  


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Dictionary – 1
-----------------------------------------------------------------------------------------------------------------
1. Which of the following statements create a dictionary?
a) d = {}
b) d = {“john”:40, “peter”:45}
c) d = {40:”john”, 45:”peter”}
d) All of the mentioned
 Answer: d
Explanation: Dictionaries are created by specifying keys and values.

2. What will be the output of the following Python code snippet?
d = {"john":40, "peter":45}
a) “john”, 40, 45, and “peter”
b) “john” and “peter”
c) 40 and 45
d) d = (40:”john”, 45:”peter”)
 Answer: b
Explanation: Dictionaries appear in the form of keys and values. 
3. What will be the output of the following Python code snippet?


d = {"john":40, "peter":45}"john" in d
a) True
b) False
c) None
d) Error
 Answer: a
Explanation: In can be used to check if the key is int dictionary. 
4. What will be the output of the following Python code snippet?
d1 = {"john":40, "peter":45}d2 = {"john":466, "peter":45}d1 == d2
a) True
b) False
c) None
d) Error
 Answer: b
Explanation: If d2 was initialized as d2 = d1 the answer would be true.

5. What will be the output of the following Python code snippet?
d1 = {"john":40, "peter":45}d2 = {"john":466, "peter":45}d1 > d2
a) True
b) False
c) Error
d) None
 Answer: c
Explanation: Arithmetic > operator cannot be used with dictionaries.
6. What will be the output of the following Python code snippet?
d = {"john":40, "peter":45}d["john"]
a) 40
b) 45
c) “john”
d) “peter”
 Answer: a
Explanation: Execute in the shell to verify. 

7. Suppose d = {“john”:40, “peter”:45}, to delete the entry for “john” what command do we use?
a) d.delete(“john”:40)
b) d.delete(“john”)
c) del d[“john”] 
d) del d(“john”:40)
 Answer: c
Explanation: Execute in the shell to verify.
8. Suppose d = {“john”:40, “peter”:45}. To obtain the number of entries in dictionary which command do we use?
a) d.size()
b) len(d)
c) size(d)
d) d.len()
 Answer: b
Explanation: Execute in the shell to verify.
9. What will be the output of the following Python code snippet?
d = {"john":40, "peter":45}print(list(d.keys()))
a) [“john”, “peter”] 
b) [“john”:40, “peter”:45] 
c) (“john”, “peter”)
d) (“john”:40, “peter”:45)
 Answer: a
Explanation: The output of the code shown above is a list containing only keys of the dictionary d, in the form of a list.
10. Suppose d = {“john”:40, “peter”:45}, what happens when we try to retrieve a value using the expression d[“susan”]?
a) Since “susan” is not a value in the set, Python raises a KeyError exception
b) It is executed fine and no exception is raised, and it returns None
c) Since “susan” is not a key in the set, Python raises a KeyError exception
d) Since “susan” is not a key in the set, Python raises a syntax error
 Answer: c
Explanation: Execute in the shell to verify.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Dictionary – 2
-----------------------------------------------------------------------------------------------------------------
1.	Which of these about a dictionary is false?
a)	The values of a dictionary can be accessed using keys
b)	The keys of a dictionary can be accessed using values
c)	Dictionaries aren’t ordered
d)	Dictionaries are mutable
Answer: b
Explanation: The values of a dictionary can be accessed using keys but the keys of a dictionary can’t be accessed using values.

2.	Which of the following is not a declaration of the dictionary?
a)	{1: ‘A’, 2: ‘B’}
b)	dict([[1,”A”],[2,”B”]])
c)	{1,”A”,2”B”}
d)	{ }
Answer: c
Explanation: Option c is a set, not a dictionary.
3.	What will be the output of the following Python code snippet?
a={1:"A",2:"B",3:"C"}
for i,j in a.items():
    print(i,j,end=" ")
a)	1 A 2 B 3 C
b)	1 2 3
c)	A B C
d)	1:”A” 2:”B” 3:”C”
Answer: a
Explanation: In the above code, variables i and j iterate over the keys and values of the dictionary respectively. 
4.	What will be the output of the following Python code snippet?
a={1:"A",2:"B",3:"C"}
print(a.get(1,4))
a) 1
b) A
c) 4
d) Invalid syntax for get method
Answer: b
Explanation: The get() method returns the value of the key if the key is present in the dictionary and the default value(second parameter) if the key isn’t present in the dictionary.


5.	What will be the output of the following Python code snippet?
a={1:"A",2:"B",3:"C"}
print(a.get(5,4))
a)	Error, invalid syntax
b)	A
c)	5
d)	4
Answer: d
Explanation: The get() method returns the default value(second parameter) if the key isn’t present in the dictionary.
6.	What will be the output of the following Python code snippet?
a={1:"A",2:"B",3:"C"}
print(a.setdefault(3))
a)	{1: ‘A’, 2: ‘B’, 3: ‘C’}
b)	C
c)	{1: 3, 2: 3, 3: 3}
d)      No method called setdefault() exists for dictionary
Answer: b
Explanation: setdefault() is similar to get() but will set dict[key]=default if key is not already in the dictionary.

7.	What will be the output of the following Python code snippet?
a={1:"A",2:"B",3:"C"}
a.setdefault(4,"D")
print(a)
a)	{1: ‘A’, 2: ‘B’, 3: ‘C’, 4: ‘D’}
b)	None
c)	Error
d)	[1,3,6,10] 
Answer: a
Explanation: setdefault() will set dict[key]=default if key is not already in the dictionary.
8.	What will be the output of the following Python code?
a={1:"A",2:"B",3:"C"}
b={4:"D",5:"E"}
a.update(b)
print(a)
a)	{1: ‘A’, 2: ‘B’, 3: ‘C’}
b)	Method update() doesn’t exist for dictionaries
c)	{1: ‘A’, 2: ‘B’, 3: ‘C’, 4: ‘D’, 5: ‘E’}
d)	{4: ‘D’, 5: ‘E’}
Answer: c
Explanation: update() method adds dictionary b’s key-value pairs to dictionary a. Execute in python shell to verify.
9.	What will be the output of the following Python code?
a={1:"A",2:"B",3:"C"}
b=a.copy()
b[2]="D"
print(a)
a)	Error, copy() method doesn’t exist for dictionaries
b)	{1: ‘A’, 2: ‘B’, 3: ‘C’}
c)	{1: ‘A’, 2: ‘D’, 3: ‘C’}
d)	“None” is printed
Answer: b
Explanation: Changes made in the copy of the dictionary isn’t reflected in the original one. 

10.	What will be the output of the following Python code?
a={1:"A",2:"B",3:"C"}
a.clear()
print(a)
a)	None
b)	{ None:None, None:None, None:None}
c)	{1:None, 2:None, 3:None}
d)	{ }
Answer: d
Explanation: The clear() method clears all the key-value pairs in the dictionary. 
11.	Which of the following isn’t true about dictionary keys?
a)	More than one key isn’t allowed
b)	Keys must be immutable
c)	Keys must be integers
d)	When duplicate keys encountered, the last assignment wins
Answer: c
Explanation: Keys of a dictionary may be any data type that is immutable.
12.	What will be the output of the following Python code?
a={1:5,2:3,3:4}
a.pop(3)
print(a)
a)	{1: 5}
b)	{1: 5, 2: 3}
c)	Error, syntax error for pop() method
d)	{1: 5, 3: 4}
Answer: b
Explanation: pop() method removes the key-value pair for the key mentioned in the pop() method.
13.	What will be the output of the following Python code?
a={1:5,2:3,3:4}
print(a.pop(4,9))
a)	9
b)	3
c)	Too many arguments for pop() method
d)	4
Answer: a
Explanation: pop() method returns the value when the key is passed as an argument and otherwise returns the default value(second argument) if the key isn’t present in the dictionary.
14.	What will be the output of the following Python code?
a={1:"A",2:"B",3:"C"}
for i in a:
    print(i,end=" ")
a)	1 2 3
b)	‘A’ ‘B’ ‘C’
c)	1 ‘A’ 2 ‘B’ 3 ‘C’
d)	Error, it should be: for i in a.items():
Answer: a
Explanation: The variable i iterates over the keys of the dictionary and hence the keys are printed.
15.	What will be the output of the following Python code?
>>> a={1:"A",2:"B",3:"C"}
>>> a.items()
a)	Syntax error
b)	dict_items([(‘A’), (‘B’), (‘C’)])
c)	dict_items([(1,2,3)])
d)	dict_items([(1, ‘A’), (2, ‘B’), (3, ‘C’)])
Answer: d
Explanation: The method items() returns list of tuples with each tuple having a key-value pair.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Dictionary – 3
-----------------------------------------------------------------------------------------------------------------
1.	Which of the statements about dictionary values if false?
a)	More than one key can have the same value
b)	The values of the dictionary can be accessed as dict[key] 
c)	Values of a dictionary must be unique
d)	Values of a dictionary can be a mixture of letters and numbers
Answer: c
Explanation: More than one key can have the same value.

2.	What will be the output of the following Python code snippet?
>>> a={1:"A",2:"B",3:"C"}
>>> del a
a)	method del doesn’t exist for the dictionary
b)	del deletes the values in the dictionary
c)	del deletes the entire dictionary
d)	del deletes the keys in the dictionary
Answer: c
Explanation: del deletes the entire dictionary and any further attempt to access it will throw an error.
3.	If a is a dictionary with some key-value pairs, what does a.popitem() do?
a)	Removes an arbitrary element
b)	Removes all the key-value pairs
c)	Removes the key-value pair for the key given as an argument
d)	Invalid method for dictionary
Answer: a
Explanation: The method popitem() removes a random key-value pair.
4.	What will be the output of the following Python code snippet?
total={}
def insert(items):
    if items in total:
        total[items] += 1
    else:
        total[items] = 1
insert('Apple')
insert('Ball')
insert('Apple')
print (len(total))
a) 3
b) 1
c) 2
d) 0
Answer: c
Explanation: The insert() function counts the number of occurrences of the item being inserted into the dictionary. There are only 2 keys present since the key ‘Apple’ is repeated. Thus, the length of the dictionary is 2.


5.	What will be the output of the following Python code snippet?
a = {}
a[1] = 1
a['1'] = 2
a[1]=a[1]+1
count = 0
for i in a:
    count += a[i]
print(count)
a)	1
b)	2
c)	4
d)	Error, the keys can’t be a mixture of letters and numbers
Answer: c
Explanation: The above piece of code basically finds the sum of the values of keys. 
6.	What will be the output of the following Python code snippet?
numbers = {}
letters = {}
comb = {}
numbers[1] = 56
numbers[3] = 7
letters[4] = 'B'
comb['Numbers'] = numbers
comb['Letters'] = letters
print(comb)
a)	Error, dictionary in a dictionary can’t exist
b)	‘Numbers’: {1: 56, 3: 7}
c)	{‘Numbers’: {1: 56}, ‘Letters’: {4: ‘B’}}
d)	{‘Numbers’: {1: 56, 3: 7}, ‘Letters’: {4: ‘B’}}
Answer: d
Explanation: Dictionary in a dictionary can exist.

7.	What will be the output of the following Python code snippet?
test = {1:'A', 2:'B', 3:'C'}
test = {}
print(len(test))
a)	0
b)	None
c)	3
d)	An exception is thrown
Answer: a
Explanation: In the second line of code, the dictionary becomes an empty dictionary. Thus, length=0.
8.	What will be the output of the following Python code snippet?
test = {1:'A', 2:'B', 3:'C'}
del test[1]
test[1] = 'D'
del test[2]
print(len(test))
a)	0
b)	2
c)	Error as the key-value pair of 1:’A’ is already deleted
d)	1
Answer: b
Explanation: After the key-value pair of 1:’A’ is deleted, the key-value pair of 1:’D’ is added. 
9.	What will be the output of the following Python code snippet?
a = {}
a[1] = 1
a['1'] = 2
a[1.0]=4
count = 0
for i in a:
    count += a[i]
print(count)
a)	An exception is thrown
b)	3
c)	6
d)	2
Answer: c
Explanation: The value of key 1 is 4 since 1 and 1.0 are the same. Then, the function count() gives the sum of all the values of the keys (2+4). 

10.	What will be the output of the following Python code snippet?
a={}
a['a']=1
a['b']=[2,3,4]
print(a)
a)	Exception is thrown
b)	{‘b’: [2], ‘a’: 1}
c)	{‘b’: [2], ‘a’: [3]}
d)	{‘b’: [2, 3, 4], ‘a’: 1}
Answer: d
Explanation: Mutable members can be used as the values of the dictionary but they cannot be used as the keys of the dictionary. 
11.	What will be the output of the following Python code snippet?
>>>import collections
>>> a=collections.Counter([1,1,2,3,3,4,4,4])
>>> a
a)	{1,2,3,4}
b)	Counter({4, 1, 3, 2})
c)	Counter({4: 3, 1: 2, 3: 2, 2: 1})
d)	{4: 3, 1: 2, 3: 2, 2: 1}
Answer: c
Explanation: The statement a=collections.OrderedDict() generates a dictionary with the number as the key and the count of times the number appears as the value.
12.	What will be the output of the following Python code snippet?
>>>import collections
>>> b=collections.Counter([2,2,3,4,4,4])
>>> b.most_common(1)
a)	Counter({4: 3, 2: 2, 3: 1})
b)	{3:1}
c)	{4:3}
d)	[(4, 3)] 
Answer: d
Explanation: The most_common() method returns the n number key-value pairs where the value is the most recurring.
13.	What will be the output of the following Python code snippet?
>>>import collections
>>> b=collections.Counter([2,2,3,4,4,4])
>>> b.most_common(1)
a)	Counter({4: 3, 2: 2, 3: 1})
b)	{3:1}
c)	{4:3}
d)	[(4, 3)] 
Answer: d
Explanation: The most_common() method returns the n number key-value pairs where the value is the most recurring.
14.	What will be the output of the following Python code snippet?
>>> import collections
>>> a=collections.Counter([2,2,3,3,3,4])
>>> b=collections.Counter([2,2,3,4,4])
>>> a|b
a)	Counter({3: 3, 2: 2, 4: 2})
b)	Counter({2: 2, 3: 1, 4: 1})
c)	Counter({3: 2})
d)	Counter({4: 1})
Answer: a
Explanation: a|b returns the pair of keys and the highest recurring value.

15.	What will be the output of the following Python code snippet?
>>> import collections
>>> a=collections.Counter([3,3,4,5])
>>> b=collections.Counter([3,4,4,5,5,5])
>>> a&b
a)	Counter({3: 12, 4: 1, 5: 1})
b)	Counter({3: 1, 4: 1, 5: 1})
c)	Counter({4: 2})
d)	Counter({5: 1})
Answer: b
Explanation: a&b returns the pair of keys and the lowest recurring value.


-----------------------------------------------------------------------------------------------------------------

Python Question and Answers – Built-in Functions – 1
-----------------------------------------------------------------------------------------------------------------
1. Which of the following functions is a built-in function in python?
a) seed()
b) sqrt()
c) factorial()
d) print()
Answer: d
Explanation: The function seed is a function which is present in the random module. The functions sqrt and factorial are a part of the math module. The print function is a built-in function which prints a value directly to the system output.

2. What will be the output of the following Python expression?
round(4.576)
a) 4.5
b) 5
c) 4
d) 4.6
Answer: b
Explanation: This is a built-in function which rounds a number to give precision in decimal digits. In the above case, since the number of decimal places has not been specified, the decimal number is rounded off to a whole number. Hence the output will be 5.
3. The function pow(x,y,z) is evaluated as:
a) (x**y)**z
b) (x**y) / z
c) (x**y) % z
d) (x**y)*z
Answer: c
Explanation: The built-in function pow() can accept two or three arguments. When it takes in two arguments, they are evaluated as x**y. When it takes in three arguments, they are evaluated as (x**y)%z. 
4. What will be the output of the following Python function?
all([2,4,0,6])
a) Error
b) True
c) False
d) 0
Answer: c
Explanation: The function all returns false if any one of the elements of the iterable is zero and true if all the elements of the iterable are non zero. Hence the output of this function will be false.


5.  What will be the output of the following Python expression?
round(4.5676,2)?
a) 4.5
b) 4.6
c) 4.57
d) 4.56
Answer: c
Explanation: The function round is used to round off the given decimal number to the specified decimal places. In this case, the number should be rounded off to two decimal places. Hence the output will be 4.57.
6. What will be the output of the following Python function?
any([2>8, 4>2, 1>2])
a) Error
b) True
c) False
d) 4>2
Answer: b
Explanation: The built-in function any() returns true if any or more of the elements of the iterable is true (non zero), If all the elements are zero, it returns false.

7. What will be the output of the following Python function?
import math
abs(math.sqrt(25))
a) Error
b) -5
c) 5
d) 5.0
Answer: d
Explanation: The abs() function prints the absolute value of the argument passed. For example: abs(-5)=5. Hence, in this case we get abs(5.0)=5.0.
8.  What will be the output of the following Python function?
sum(2,4,6)
sum([1,2,3])
a) Error, 6
b) 12, Error
c) 12, 6
d) Error, Error
Answer: a
Explanation: The first function will result in an error because the function sum() is used to find the sum of iterable numbers. Hence the outcomes will be Error and 6 respectively.
9. What will be the output of the following Python function?
all(3,0,4.2)
a) True
b) False
c) Error
d) 0
Answer: c
Explanation: The function all() returns ‘True’ if any one or more of the elements of the iterable are non zero. In the above case, the values are not iterable, hence an error is thrown.

10. What will be the output of the following Python function?
min(max(False,-3,-4), 2,7)
a) 2
b) False
c) -3
d) -4
Answer: b
Explanation: The function max() is being used to find the maximum value from among -3, -4 and false. Since false amounts to the value zero, hence we are left with min(0, 2, 7) Hence the output is 0 (false).


-----------------------------------------------------------------------------------------------------------------

Python Question and Answers – Built-in Functions – 3
-----------------------------------------------------------------------------------------------------------------
1. Which of the following functions accepts only integers as arguments?
a) ord()
b) min()
c) chr()
d) any()
Answer: c
Explanation: The function chr() accepts only integers as arguments. The function ord() accepts only strings. The functions min() and max() can accept floating point as well as integer arguments.

2. Suppose there is a list such that: l=[2,3,4]. If we want to print this list in reverse order, which of the following methods should be used?
a) reverse(l)
b) list(reverse[(l)])
c) reversed(l)
d) list(reversed(l))
Answer: d
Explanation: The built-in function reversed() can be used to reverse the elements of a list. This function accepts only an iterable as an argument. To print the output in the form of a list, we use: list(reversed(l)). The output will be: [4,3,2].
3. What will be the output of the following Python function?
float('   -12345\n')
 (Note that the number of blank spaces before the number is 5)
a)   -12345.0 (5 blank spaces before the number)
b) -12345.0
c) Error
d) -12345.000000000…. (infinite decimal places)
Answer: b
Explanation: The function float() will remove all the blank spaces and convert the integer to a floating point number. Hence the output will be: -12345.0.
4. What will be the output of the following Python function?
ord(65)
ord(‘A’)
a) 
A

65


b) 
Error

65
c) 
A

Error
d) 
Error

Error
Answer: b
Explanation: The built-in function ord() is used to return the ASCII value of the alphabet passed to it as an argument. Hence the first function results in an error and the output of the second function is 65.
  
5.  What will be the output of the following Python function?
float(‘-infinity’)
float(‘inf’)
a) 
–inf

inf

b) 
–infinity

inf
c) 
Error

Error
d) 
Error

Junk value 
Answer: a
Explanation: The output of the first function will be –inf and that of the second function will be inf.
  
6. Which of the following functions will not result in an error when no arguments are passed to it?
a) min()
b) divmod()
c) all()
d) float()
Answer: d
Explanation: The built-in functions min(), max(), divmod(), ord(), any(), all() etc throw an error when no arguments are passed to them. However there are some built-in functions like float(), complex() etc which do not throw an error when no arguments are passed to them. The output of float() is 0.0.
7. What will be the output of the following Python function?
hex(15)
a) f
b) 0xF
c) 0Xf
d) 0xf
Answer: d
Explanation: The function hex() is used to convert the given argument into its hexadecimal representation, in lower case. Hence the output of the function hex(15) is 0xf.
8.  Which of the following functions does not throw an error?
a) ord()
b) ord(‘ ‘)
c) ord(”)
d) ord(“”)
Answer: b
Explanation: The function ord() accepts a character. Hence ord(), ord(”) and ord(“”) throw errors. However the function ord(‘ ‘) does not throw an error because in this case, we are actually passing a blank space as an argument. The output of ord(‘ ‘) is 32 (ASCII value corresponding to blank space).

9. What will be the output of the following Python function?
len(["hello",2, 4, 6])
a) 4
b) 3
c) Error
d) 6
Answer: a
Explanation: The function len() returns the length of the number of elements in the iterable. Therefore the output of the function shown above is 4.
10. What will be the output of the following Python function?
oct(7)
oct(‘7’)
a) 
Error

07
b) 
0o7

Error 
c) 
0o7

Error
d) 
07

0o7
Answer: c
Explanation: The function oct() is used to convert its argument into octal form. This function does not accept strings. Hence the second function results in an error while the output of the first function is 0o7.
  


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Function – 1
-----------------------------------------------------------------------------------------------------------------
1. Which of the following is the use of function in python?
a) Functions are reusable pieces of programs
b) Functions don’t provide better modularity for your application
c) you can’t also create your own functions
d) All of the mentioned
 Answer: a
Explanation: Functions are reusable pieces of programs. They allow you to give a name to a block of statements, allowing you to run that block using the specified name anywhere in your program and any number of times. 

2. Which keyword is used for function?
a) Fun
b) Define
c) Def
d) Function
 Answer: c
Explanation: None. 
3. What will be the output of the following Python code?
def sayHello():    print('Hello World!') sayHello() sayHello()
a) 
Hello World!

Hello World!
b) 
'Hello World!'

'Hello World!'
c) 
Hello



-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Function – 2
-----------------------------------------------------------------------------------------------------------------
1. Which are the advantages of functions in python?
a) Reducing duplication of code
b) Decomposing complex problems into simpler pieces
c) Improving clarity of the code
d) All of the mentioned
 Answer: d
Explanation: None. 

2. What are the two main types of functions?
a) Custom function
b) Built-in function & User defined function
c) User function
d) System function
 Answer: b
Explanation: Built-in functions and user defined ones. The built-in functions are part of the Python language. Examples are: dir(), len() or abs(). The user defined functions are functions created with the def keyword. 
3. Where is function defined?
a) Module
b) Class
c) Another function
d) All of the mentioned
 Answer: d
Explanation: Functions can be defined inside a module, a class or another function. 
4. What is called when a function is defined inside a class?
a) Module
b) Class
c) Another function
d) Method
 Answer: d
Explanation: None. 
5. Which of the following is the use of id() function in python?
a) Id  returns the identity of the object
b) Every object doesn’t have a unique id
c) All of the mentioned
d) None of the mentioned
 Answer:  a
Explanation: Each object in Python has a unique id. The id() function returns the object’s id. 
6. Which of the following refers to mathematical function?
a) sqrt
b) rhombus
c) add
d) rhombus
 Answer: a
Explanation: Functions that are always available for usage, functions that are contained within external modules, which must be imported and functions defined by a programmer with the def keyword.
Eg:  math import sqrt
A sqrt() function is imported from the math module.

7. What will be the output of the following Python code?


def cube(x):    return x * x * x      x = cube(3)    print x
a) 9
b) 3
c) 27
d) 30
 Answer: c
Explanation: A function is created to do a specific task. Often there is a result from such a task. The return keyword is used to return values from a function. A function may or may not return a value. If a function does not have a return keyword, it will send a none value. 
8. What will be the output of the following Python code?
def C2F(c):    return c * 9/5 + 32print C2F(100)print C2F(0)
a) 
212

32
b) 
314

24
c) 
567

98

d) None of the mentioned
 Answer: a
Explanation: The code shown above is used to convert a temperature in degree celsius to fahrenheit.

9. What will be the output of the following Python code?
def power(x, y=2):    r = 1    for i in range(y):       r = r * x    return rprint power(3)print power(3, 3)
a) 
212

32
b) 
9

27
c) 
567

98
d) None of the mentioned
 Answer: b
Explanation: The arguments in Python functions may have implicit values. An implicit value is used, if no value is provided. Here we created a power function. The function has one argument with an implicit value. We can call the function with one or two arguments. 
10. What will be the output of the following Python code?

def sum(*args):   '''Function returns the sum    of all values'''   r = 0   for i in args:      r += i   return rprint sum.__doc__print sum(1, 2, 3)print sum(1, 2, 3, 4, 5)
a) 
6

15
b) 
6

100
c) 
123

12345
d) None of the mentioned
 Answer: a
Explanation: We use the * operator to indicate, that the function will accept arbitrary number of arguments. The sum() function will return the sum of all arguments. The first string in the function body is called the function documentation string. It is used to document the function. The string must be in triple quotes. 


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Function – 3
-----------------------------------------------------------------------------------------------------------------
1. Python supports the creation of anonymous functions at runtime, using a construct called __________
a) lambda
b) pi
c) anonymous
d) none of the mentioned
 Answer: a
Explanation: Python supports the creation of anonymous functions (i.e. functions that are not bound to a name) at runtime, using a construct called lambda. Lambda functions are restricted to a single expression. They can be used wherever normal functions can be used. 

2. What will be the output of the following Python code?
y = 6z = lambda x: x * yprint z(8)
a) 48
b) 14
c) 64
d) None of the mentioned
 Answer: a
Explanation: The lambda keyword creates an anonymous function. The x is a parameter, that is passed to the lambda function. The parameter is followed by a colon character. The code next to the colon is the expression that is executed, when the lambda function is called. The lambda function is assigned to the z variable.
The lambda function is executed. The number 8 is passed to the anonymous function and it returns 48 as the result. Note that z is not a name for this function. It is only a variable to which the anonymous function was assigned. 
3. What will be the output of the following Python code?
lamb = lambda x: x ** 3print(lamb(5))
a) 15
b) 555
c) 125
d) None of the mentioned
 Answer: c
Explanation: None. 


4. Does Lambda contains return statements?
a) True
b) False
 Answer: b
Explanation: lambda definition does not include a return statement. it always contains an expression which is returned. Also note that we can put a lambda definition anywhere a function is expected. We don’t have to assign it to a variable at all. 
5. Lambda is a statement.
a) True
b) False
 Answer: b
Explanation: lambda is an anonymous function in Python. Hence this statement is false. 
6. Lambda contains block of statements.
a) True
b) False
 Answer: b
Explanation: None. 
7. What will be the output of the following Python code?
def f(x, y, z): return x + y + zf(2, 30, 400)
a) 432
b) 24000
c) 430
d) No output
 Answer: a
Explanation: None. 
8. What will be the output of the following Python code?

def writer():	title = 'Sir'	name = (lambda x:title + ' ' + x)	return name who = writer()who('Arthur')
a) Arthur Sir
b) Sir Arthur
c) Arthur
d) None of the mentioned
 Answer: b
Explanation: None. 
9. What will be the output of the following Python code?
L = [lambda x: x ** 2,         lambda x: x ** 3,         lambda x: x ** 4] for f in L:	print(f(3))
a) 
27

81

343
b) 
6

9

12
c) 
9

27

81
d) None of the mentioned
 Answer: c
Explanation: None.


10. What will be the output of the following Python code?
min = (lambda x, y: x if x < y else y) min(101*99, 102*98)
a) 9997
b) 9999
c) 9996
d) None of the mentioned
 Answer:  c
Explanation: None.



-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Function – 4
-----------------------------------------------------------------------------------------------------------------
1.	What is a variable defined outside a function referred to as?
a)	A static variable
b)	A global variable
c)	A local variable
d)	An automatic variable
Answer: b
Explanation: The value of a variable defined outside all function definitions is referred to as a global variable and can be used by multiple functions of the program.

2.	What is a variable defined inside a function referred to as?
a)	A global variable
b)	A volatile variable
c)	A local variable
d)	An automatic variable
Answer: c
Explanation: The variable inside a function is called as local variable and the variable definition is confined only to that function.
3.	What will be the output of the following Python code?
i=0
def change(i):
   i=i+1
   return i
change(1)
print(i)
a)	1
b)	Nothing is displayed
c)	0
d)	An exception is thrown
Answer: c
Explanation: Any change made in to an immutable data type in a function isn’t reflected outside the function.
4.	What will be the output of the following Python code?
def a(b):
    b = b + [5]
 
c = [1, 2, 3, 4]
a(c)
print(len(c))
a)	4
b)	5
c)	1
d)	An exception is thrown
Answer: b
Explanation: Since a list is mutable, any change made in the list in the function is reflected outside the function.


5.	What will be the output of the following Python code?
a=10
b=20
def change():
    global b
    a=45
    b=56
change()
print(a)
print(b)
a) 
10

56
b) 
45

56
c) 
10

20
d) Syntax Error
Answer: a
Explanation: The statement “global b” allows the global value of b to be accessed and changed. Whereas the variable a is local and hence the change isn’t reflected outside the function.

6.  What will be the output of the following Python code?
def change(i = 1, j = 2):
    i = i + j
    j = j + 1
    print(i, j)
change(j = 1, i = 2)
a)	An exception is thrown because of conflicting values
b)	1 2
c)	3 3
d)	3 2
Answer: d
Explanation: The values given during function call is taken into consideration, that is, i=2 and j=1.
7.	What will be the output of the following Python code?
def change(one, *two):
   print(type(two))
change(1,2,3,4)
a)	Integer
b)	Tuple
c)	Dictionary
d)	An exception is thrown
Answer: b
Explanation: The parameter two is a variable parameter and consists of (2,3,4). Hence the data type is tuple.
8.  If a function doesn’t have a return statement, which of the following does the function return?
a)	int
b)	null
c)	None
d)	An exception is thrown without the return statement
Answer: c
Explanation: A function can exist without a return statement and returns None if the function doesn’t have a return statement.
9.  What will be the output of the following Python code?

def display(b, n):
    while n > 0:
        print(b,end="")
        n=n-1
display('z',3)
a)	zzz
b)	zz
c)	An exception is executed
d)	Infinite loop
Answer: a
Explanation: The loop runs three times and ‘z’ is printed each time.
10. What will be the output of the following Python code?
def find(a, **b):
   print(type(b))
find('letters',A='1',B='2')
a)	String
b)	Tuple
c)	Dictionary
d)	An exception is thrown
Answer: c
Explanation: b combines the remaining parameters into a dictionary.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Argument Parsing 1
-----------------------------------------------------------------------------------------------------------------
1. What is the type of each element in sys.argv?
a) set
b) list
c) tuple
d) string
Answer: d
Explanation: It is a list of strings.

2. What is the length of sys.argv?
a) number of arguments
b) number of arguments + 1
c) number of arguments – 1
d) none of the mentioned
Answer: b
Explanation: The first argument is the name of the program itself. Therefore the length of sys.argv is one more than the number arguments.
3. What will be the output of the following Python code?
def foo(k):
    k[0] = 1
q = [0]
foo(q)
print(q)
a) [0] 
b) [1] 
c) [1, 0] 
d) [0, 1] 
Answer: b
Explanation: Lists are passed by reference.


4. How are keyword arguments specified in the function heading?
a) one-star followed by a valid identifier
b) one underscore followed by a valid identifier
c) two stars followed by a valid identifier
d) two underscores followed by a valid identifier
Answer: c
Explanation: Refer documentation.
5. How many keyword arguments can be passed to a function in a single function call?
a) zero
b) one
c) zero or more
d) one or more
Answer: c
Explanation: Zero keyword arguments may be passed if all the arguments have default values.
6. What will be the output of the following Python code?
def foo(fname, val):
    print(fname(val))
foo(max, [1, 2, 3])
foo(min, [1, 2, 3])
a) 3 1
b) 1 3
c) error
d) none of the mentioned
Answer: a
Explanation: It is possible to pass function names as arguments to other functions.

7. What will be the output of the following Python code?
def foo():
    return total + 1
total = 0
print(foo())
a) 0
b) 1
c) error
d) none of the mentioned
Answer: b
Explanation: It is possible to read the value of a global variable directly.
8. What will be the output of the following Python code?
def foo():
    total += 1
    return total
total = 0
print(foo())
a) 0
b) 1
c) error
d) none of the mentioned
Answer: c
Explanation: It is not possible to change the value of a global variable without explicitly specifying it.

9. What will be the output of the following Python code?
def foo(x):
    x = ['def', 'abc']
    return id(x)
q = ['abc', 'def']
print(id(q) == foo(q))
a) True
b) False
c) None
d) Error
Answer: b
Explanation: A new object is created in the function.
10. What will be the output of the following Python code?
def foo(i, x=[]):
    x.append(i)
    return x
for i in range(3):
    print(foo(i))
a) [0] [1] [2] 
b) [0] [0, 1] [0, 1, 2] 
c) [1] [2] [3] 
d) [1] [1, 2] [1, 2, 3] 
Answer: b
Explanation: When a list is a default value, the same list will be reused.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Global vs Local Variables – 2
-----------------------------------------------------------------------------------------------------------------
1. Which of the following data structures is returned by the functions globals() and locals()?
a) list
b) set
c) dictionary
d) tuple
Answer: c
Explanation: Both the functions, that is, globals() and locals() return value of the data structure dictionary.

2. What will be the output of the following Python code?
x=1
def cg():
	global x
	x=x+1	
cg()
x
a) 2
b) 1
c) 0
d) Error
Answer: a
Explanation: Since ‘x’ has been declared a global variable, it can be modified very easily within the function. Hence the output is 2.
3. On assigning a value to a variable inside a function, it automatically becomes a global variable.
a) True
b) False
Answer: b
Explanation: On assigning a value to a variable inside a function, t automatically becomes a local variable. Hence the above statement is false.


4. What will be the output of the following Python code?
e="butter"
def f(a): print(a)+e
f("bitter")
a) error
b) 
    butter

    error
c) 
    bitter

    error
d) bitterbutter
Answer: c
Explanation: The output of the code shown above will be ‘bitter’, followed by an error. The error is because the operand ‘+’ is unsupported on the types used above.

5. What happens if a local variable exists with the same name as the global variable you want to access?
a) Error
b) The local variable is shadowed
c) Undefined behavior
d) The global variable is shadowed
Answer: d
Explanation: If a local variable exists with the same name as the local variable that you want to access, then the global variable is shadowed. That is, preference is given to the local variable.
6. What will be the output of the following Python code?
a=10
globals()['a']=25
print(a)
a) 10
b) 25
c) Junk value
d) Error
Answer: b
Explanation: In the code shown above, the value of ‘a’ can be changed by using globals() function. The dictionary returned is accessed using key of the variable ‘a’ and modified to 25.
7. What will be the output of the following Python code?

def f(): x=4
x=1
f()
x
a) Error
b) 4
c) Junk value
d) 1
Answer: d
Explanation: In the code shown above, when we call the function f, a new namespace is created. The assignment x=4 is performed in the local namespace and does not affect the global namespace. Hence the output is 1.
8. ______________ returns a dictionary of the module namespace.
________________ returns a dictionary of the current namespace.
a) 
locals()

globals()
b) 
locals()

locals()
c) 
globals()

locals()
d) 
globals()

globals()
Answer: c
Explanation: The function globals() returns a dictionary of the module namespace, whereas the function locals() returns a dictionary of the current namespace.
  


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Recursion
-----------------------------------------------------------------------------------------------------------------
1.	Which is the most appropriate definition for recursion?
a)	A function that calls itself
b)	A function execution instance that calls another execution instance of the same function
c)	A class method that calls another class method
d)	An in-built method that is automatically called
Answer: b
Explanation: The appropriate definition for a recursive function is a function execution instance that calls another execution instance of the same function either directly or indirectly.

2.	Only problems that are recursively defined can be solved using recursion.
a)	True
b)	False
Answer: b
Explanation: There are many other problems can also be solved using recursion.
3.	Which of these is false about recursion?
a)	Recursive function can be replaced by a non-recursive function
b)	Recursive functions usually take more memory space than non-recursive function
c)	Recursive functions run faster than non-recursive function
d)	Recursion makes programs easier to understand
Answer: c
Explanation: The speed of a program using recursion is slower than the speed of its non-recursive equivalent.
4.	Fill in the line of the following Python code for calculating the factorial of a number.
def fact(num):
    if num == 0: 
        return 1
    else:
        return _____________________
a)	num*fact(num-1)
b)	(num-1)*(num-2)
c)	num*(num-1)
d)	fact(num)*fact(num-1)
Answer: a
Explanation: Suppose n=5 then, 5*4*3*2*1 is returned which is the factorial of 5.
5.	What will be the output of the following Python code?


def test(i,j):
    if(i==0):
        return j
    else:
        return test(i-1,i+j)
print(test(4,7))
a)	13
b)	7
c)	Infinite loop
d)	17
Answer: d
Explanation: The test(i-1,i+j) part of the function keeps calling the function until the base condition of the function is satisfied.
6.  What will be the output of the following Python code?
l=[]
def convert(b):
    if(b==0):
        return l
    dig=b%2
    l.append(dig)
    convert(b//2)
convert(6)
l.reverse()
for i in l:
    print(i,end="")
a)	011
b)	110
c)	3
d)	Infinite loop
Answer: b
Explanation: The above code gives the binary equivalent of the number.
7.	What is tail recursion?
a)	A recursive function that has two base cases
b)	A function where the recursive functions leads to an infinite loop
c)	A recursive function where the function doesn’t return anything and just prints the values
d)	A function where the recursive call is the last thing executed by the function
Answer: d
Explanation: A recursive function is tail recursive when recursive call is executed by the function in the last.
8.  Observe the following Python code?

def a(n):
    if n == 0:
        return 0
    else:
        return n*a(n - 1)
def b(n, tot):
    if n == 0:
        return tot
    else:
        return b(n-2, tot-2)
a)	Both a() and b() aren’t tail recursive
b)	Both a() and b() are tail recursive
c)	b() is tail recursive but a() isn’t
d)	a() is tail recursive but b() isn’t
Answer: c
Explanation: A recursive function is tail recursive when recursive call is executed by the function in the last.
9.  Which of the following statements is false about recursion?
a)	Every recursive function must have a base case
b)	Infinite recursion can occur if the base case isn’t properly mentioned
c)	A recursive function makes the code easier to understand
d)	Every recursive function must have a return value
Answer: d
Explanation: A recursive function needn’t have a return value. 
10. What will be the output of the following Python code?
def fun(n):
    if (n > 100):
        return n - 5
    return fun(fun(n+11));
 
print(fun(45))
a)	50
b)	100
c)	74
d)	Infinite loop
Answer: b
Explanation: The fun(fun(n+11)) part of the code keeps executing until the value of n becomes greater than 100, after which n-5 is returned and printed.
11. Recursion and iteration are the same programming approach.
a)	True
b)	False
Answer: b
Explanation: In recursion, the function calls itself till the base condition is reached whereas iteration means repetition of process for example in for-loops.
12.  What happens if the base condition isn’t defined in recursive programs?
a)	Program gets into an infinite loop
b)	Program runs once
c)	Program runs n number of times where n is the argument given to the function
d)	An exception is thrown
Answer: a
Explanation: The program will run until the system gets out of memory.

13.  Which of these is not true about recursion?
a)	Making the code look clean
b)	A complex task can be broken into sub-problems
c)	Recursive calls take up less memory
d)	Sequence generation is easier than a nested iteration
Answer: c
Explanation: Recursive calls take up a lot of memory and time as memory is taken up each time the function is called.
14.  Which of these is not true about recursion?
a)	It’s easier to code some real-world problems using recursion than non-recursive equivalent
b)	Recursive functions are easy to debug
c)	Recursive calls take up a lot of memory
d)	Programs using recursion take longer time than their non-recursive equivalent
Answer: b
Explanation: Recursive functions may be hard to debug as the logic behind recursion may be hard to follow.
15.  What will be the output of the following Python code?
def a(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return a(n-1)+a(n-2)
for i in range(0,4):
    print(a(i),end=" ")
a)	0 1 2 3
b)	An exception is thrown
c)	0 1 1 2 3
d)	0 1 1 2
Answer: d
Explanation: The above piece of code prints the Fibonacci series.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Python Modules
-----------------------------------------------------------------------------------------------------------------
1.	Which of these definitions correctly describes a module?
a)	Denoted by triple quotes for providing the specification of certain program elements
b)	Design and implementation of specific functionality to be incorporated into a program
c)	Defines the specification of how it is to be used
d)	Any program that reuses code
Answer: b
Explanation: The term “module” refers to the implementation of specific functionality to be incorporated into a program.

2.	Which of the following is not an advantage of using modules?
a)	Provides a means of reuse of program code
b)	Provides a means of dividing up tasks
c)	Provides a means of reducing the size of the program
d)	Provides a means of testing individual parts of the program
Answer: c
Explanation: The total size of the program remains the same regardless of whether modules are used or not. Modules simply divide the program.
3.	Program code making use of a given module is called a ______ of the module.
a)	Client
b)	Docstring
c)	Interface
d)	Modularity
Answer: a
Explanation: Program code making use of a given module is called the client of the module. There may be multiple clients for a module.
4.	______ is a string literal denoted by triple quotes for providing the specifications of certain program elements.
a)	Interface
b)	Modularity
c)	Client
d)	Docstring
Answer: d
Explanation: Docstring used for providing the specifications of program elements.
5.	Which of the following is true about top-down design process?
a)	The details of a program design are addressed before the overall design
b)	Only the details of the program are addressed
c)	The overall design of the program is addressed before the details
d)	Only the design of the program is addressed
Answer: c
Explanation: Top-down design is an approach for deriving a modular design in which the overall design.


6.  In top-down design every module is broken into same number of submodules.
a)	True
b)	False
Answer: b
Explanation: In top-down design every module can even be broken down into different number of submodules.
7.	All modular designs are because of a top-down design process.
a)	True
b)	False
Answer: b
Explanation: The details of the program can be addressed before the overall design too. Hence, all modular designs are not because of a top-down design process.
8. What will be the output of the following Python code?
#mod1
def change(a):
    b=[x*2 for x in a]
    print(b)
#mod2
def change(a):
    b=[x*x for x in a]
    print(b)
from mod1 import change
from mod2 import change
#main
s=[1,2,3]
change(s)
a) [2,4,6] 
b) [1,4,9] 
c) 
[2,4,6]

[1,4,9]

d) There is a name clash
Answer: d
Explanation: A name clash is when two different entities with the same identifier become part of the same scope. Since both the modules have the same function name, there is a name clash.
9.  Which of the following isn’t true about main modules?
a)	When a python file is directly executed, it is considered main module of a program
b)	Main modules may import any number of modules
c)	Special name given to main modules is: __main__
d)	Other main modules can import main modules
Answer: d
Explanation: Main modules are not meant to be imported into other modules.
10. Which of the following is not a valid namespace?
a)	Global namespace
b)	Public namespace
c)	Built-in namespace
d)	Local namespace
Answer: b
Explanation: During a Python program execution, there are as many as three namespaces – built-in namespace, global namespace and local namespace.
11.  Which of the following is false about “import modulename” form of import?
a)	The namespace of imported module becomes part of importing module
b)	This form of import prevents name clash
c)	The namespace of imported module becomes available to importing module
d)	The identifiers in module are accessed as: modulename.identifier
Answer: a
Explanation: In the “import modulename” form of import, the namespace of imported module becomes available to, but not part of, the importing module.
12.  Which of the following is false about “from-import” form of import?
a)	The syntax is: from modulename import identifier
b)	This form of import prevents name clash
c)	The namespace of imported module becomes part of importing module
d)	The identifiers in module are accessed directly as: identifier
Answer: b
Explanation: In the “from-import” form of import, there may be name clashes because names of the imported identifiers aren’t specified along with the module name.

13.  Which of the statements about modules is false?
a)	In the “from-import” form of import, identifiers beginning with two underscores are private and aren’t imported
b)	dir() built-in function monitors the items in the namespace of the main module
c)	In the “from-import” form of import, all identifiers regardless of whether they are private or public are imported
d)	When a module is loaded, a compiled version of the module with file extension .pyc is automatically produced
Answer: c
Explanation: In the “from-import” form of import, identifiers beginning with two underscores are private and aren’t imported.
14. What will be the output of the following Python code?
from math import factorial
print(math.factorial(5))
a)	120
b)	Nothing is printed
c)	Error, method factorial doesn’t exist in math module
d)	Error, the statement should be: print(factorial(5))
Answer: d
Explanation: In the “from-import” form of import, the imported identifiers (in this case factorial()) aren’t specified along with the module name.
15.  What is the order of namespaces in which Python looks for an identifier?
a)	Python first searches the global namespace, then the local namespace and finally the built-in namespace
b)	Python first searches the local namespace, then the global namespace and finally the built-in namespace
c)	Python first searches the built-in namespace, then the global namespace and finally the local namespace
d)	Python first searches the built-in namespace, then the local namespace and finally the global namespace
Answer: b
Explanation: Python first searches for the local, then the global and finally the built-in namespace. 


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Math – 1
-----------------------------------------------------------------------------------------------------------------
1. What is returned by math.ceil(3.4)?
a) 3
b) 4
c) 4.0
d) 3.0
Answer: b
Explanation: The ceil function returns the smallest integer that is bigger than or equal to the number itself.

2. What is the value returned by math.floor(3.4)?
a) 3
b) 4
c) 4.0
d) 3.0
Answer: a
Explanation: The floor function returns the biggest number that is smaller than or equal to the number itself.
3. What will be the output of print(math.copysign(3, -1))?
a) 1
b) 1.0
c) -3
d) -3.0
Answer: d
Explanation: The copysign function returns a float whose absolute value is that of the first argument and the sign is that of the second argument.
4. What is displayed on executing print(math.fabs(-3.4))?
a) -3.4
b) 3.4
c) 3
d) -3
Answer: b
Explanation: A negative floating point number is returned as a positive floating point number.
5. Is the output of the function abs() the same as that of the function math.fabs()?
a) sometimes
b) always
c) never
d) none of the mentioned
Answer: a
Explanation: math.fabs() always returns a float and does not work with complex numbers whereas the return type of abs() is determined by the type of value that is passed to it.


6. What is the value returned by math.fact(6)?
a) 720
b) 6
c) [1, 2, 3, 6] 
d) error
Answer: d
Explanation: NameError, fact() is not defined.
7. What is the value of x if x = math.factorial(0)?
a) 0
b) 1
c) error
d) none of the mentioned
Answer: b
Explanation: Factorial of 0 is 1.
8. What is math.factorial(4.0)?
a) 24
b) 1
c) error
d) none of the mentioned
Answer: a
Explanation: The factorial of 4 is returned.
9. What will be the output of print(math.factorial(4.5))?
a) 24
b) 120
c) error
d) 24.0
Answer: c
Explanation: Factorial is only defined for non-negative integers.

10. What is math.floor(0o10)?
a) 8
b) 10
c) 0
d) 9
Answer: a
Explanation: 0o10 is 8 and floor(8) is 8.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Math – 2
-----------------------------------------------------------------------------------------------------------------
1. What does the function math.frexp(x) return?
a) a tuple containing the mantissa and the exponent of x
b) a list containing the mantissa and the exponent of x
c) a tuple containing the mantissa of x
d) a list containing the exponent of x
Answer: a
Explanation: It returns a tuple with two elements. The first element is the mantissa and the second element is the exponent.

2. What is the result of math.fsum([.1 for i in range(20)])?
a) 2.0
b) 20
c) 2
d) 2.0000000000000004
Answer: a
Explanation: The function fsum returns an accurate floating point sum of the elements of its argument.
3. What is the result of sum([.1 for i in range(20)])?
a) 2.0
b) 20
c) 2
d) 2.0000000000000004
Answer: d
Explanation: There is some loss of accuracy when we use sum with floating point numbers. Hence the function fsum is preferable.
4. What is returned by math.isfinite(float(‘inf’))?
a) True
b) False
c) None
d) error
Answer: b
Explanation: float(‘inf’) is not a finite number.
5. What is returned by math.isfinite(float(‘nan’))?
a) True
b) False
c) None
d) error
Answer: b
Explanation: float(‘nan’) is not a finite number.


6. What is x if x = math.isfinite(float(‘0.0’))?
a) True
b) False
c) None
d) error
Answer: a
Explanation: float(‘0.0’) is a finite number.
7. What will be the output of the following Python code?
>>> -float('inf') + float('inf')
a) inf
b) nan
c) 0
d) 0.0
Answer: b
Explanation: The result of float(‘inf’)-float(‘inf’) is undefined.

8. What will be the output of the following Python code?
print(math.isinf(float('-inf')))
a) error, the minus sign shouldn’t have been inside the brackets
b) error, there is no function called isinf
c) True
d) False
Answer: c
Explanation: -float(‘inf’) is the same as float(‘-inf’).
9. What is the value of x if x = math.ldexp(0.5, 1)?
a) 1
b) 2.0
c) 0.5
d) none of the mentioned
Answer: d
Explanation: The value returned by ldexp(x, y) is x * (2 ** y). In the current case x is 1.0.

10. What is returned by math.modf(1.0)?
a) (0.0, 1.0)
b) (1.0, 0.0)
c) (0.5, 1)
d) (0.5, 1.0)
Answer: a
Explanation: The first element is the fractional part and the second element is the integral part of the argument.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Math – 3
-----------------------------------------------------------------------------------------------------------------
1. What is the result of math.trunc(3.1)?
a) 3.0
b) 3
c) 0.1
d) 1
Answer: b
Explanation: The integral part of the floating point number is returned.

2. What is the output of print(math.trunc(‘3.1’))?
a) 3
b) 3.0
c) error
d) none of the mentioned
Answer: c
Explanation: TypeError, a string does not have __trunc__ method.
3. Which of the following is the same as math.exp(p)?
a) e ** p
b) math.e ** p
c) p ** e
d) p ** math.e
Answer: b
Explanation: math.e is the constant defined in the math module.
4. What is returned by math.expm1(p)?
a) (math.e ** p) – 1
b) math.e ** (p – 1)
c) error
d) none of the mentioned
Answer: a
Explanation: One is subtracted from the result of math.exp(p) and returned.
5. What is the default base used when math.log(x) is found?
a) e
b) 10
c) 2
d) none of the mentioned
Answer: a
Explanation: The natural log of x is returned by default.


6. Which of the following aren’t defined in the math module?
a) log2()
b) log10()
c) logx()
d) none of the mentioned
Answer: c
Explanation: log2() and log10() are defined in the math module.
7. What is returned by int(math.pow(3, 2))?
a) 6
b) 9
c) error, third argument required
d) error, too many arguments
Answer: b
Explanation: math.pow(a, b) returns a ** b.
8. What is output of print(math.pow(3, 2))?
a) 9
b) 9.0
c) None
d) None of the mentioned
Answer: b
Explanation: math.pow() returns a floating point number.
9. What is the value of x if x = math.sqrt(4)?
a) 2
b) 2.0
c) (2, -2)
d) (2.0, -2.0)
Answer: b
Explanation: The function returns one floating point number.

10. What does math.sqrt(X, Y) do?
a) calculate the Xth root of Y
b) calculate the Yth root of X
c) error
d) return a tuple with the square root of X and Y
Answer: c
Explanation: The function takes only one argument.


-----------------------------------------------------------------------------------------------------------------

Python Question and Answers – Random module – 1
-----------------------------------------------------------------------------------------------------------------
1. To include the use of functions which are present in the random library, we must use the option:
a) import random
b) random.h
c) import.random
d) random.random
Answer: a
Explanation: The command import random is used to import the random module, which enables us to use the functions which are present in the random library.

2. The output of the following Python code is either 1 or 2.
import random
random.randint(1,2)
a) True
b) False
Answer: a
Explanation: The function random.randint(a,b) helps us to generate an integer between ‘a’ and ‘b’, including ‘a’ and ‘b’. In this case, since there are no integers between 1 and 2, the output will necessarily be either 1 or 2’. 
3. What will be the output of the following Python code?
import random
random.choice(2,3,4)
a) An integer other than 2, 3 and 4
b) Either 2, 3 or 4
c) Error
d) 3 only
Answer: c
Explanation: The code shown above displays the incorrect syntax of the function random.choice(). This functions takes its numeric parameter in the form of a list. Hence the correct syntax world be: random.choice([2,3,4]).


4. What will be the output of the following Python code?
import random
random.choice([10.4, 56.99, 76])
a) Error
b) Either 10.4, 56.99 or 76
c) Any number other than 10.4, 56.99 and 76
d) 56.99 only
Answer: b
Explanation: The function random.choice(a,b,c,d) returns a random number which is selected from a, b, c and d. The output can be either a, b, c or d. Hence the output of the snippet of code shown above can be either 10.4, 56.99 or 76.
5. What will be the output of the following Python function (random module has already been imported)?
random.choice('sun')
a) sun
b) u
c) either s, u or n
d) error
Answer: c
Explanation: The above function works with alphabets just as it does with numbers. The output of this expression will be either s, u or n.
6. What will be the output of the following Python function, assuming that the random module has already been imported?

random.uniform(3,4)
a) Error
b) Either 3 or 4
c) Any integer other than 3 and 4
d) Any decimal value between 3 and 4
Answer: d
Explanation: This question depicts the basic difference between the functions random.randint(a, b) and random.uniform(a, b). While random.randint(a,b) generates an integer between ‘a’ and ‘b’, including ‘a’ and ‘b’, the function random.uniform(a,b) generates a decimal value between ‘a’ and ‘b’.
7. What will be the output of the following Python function if the random module has already been imported?
random.randint(3.5,7)
a) Error
b) Any integer between 3.5 and 7, including 7
c) Any integer between 3.5 and 7, excluding 7
d) The integer closest to the mean of 3.5 and 7
Answer: a
Explanation: The function random.randint() does not accept a decimal value as a parameter. Hence the function shown above will throw an error.
8.  Which of the following functions helps us to randomize the items of a list?
a) seed
b) randomise
c) shuffle
d) uniform
Answer: c
Explanation: The function shuffle, which is included in the random module, helps us to randomize the items of a list. This function takes the list as a parameter.
9. What will be the output of the following Python code?
random.seed(3)
random.randint(1,5)
2
random.seed(3)
random.randint(1,5)
a) 3
b) 2
c) Any integer between 1 and 5, including 1 and 5
d) Any integer between 1 and 5, excluding 1 and 5
Answer: b
Explanation: We use the seed function when we want to use the same random number once again in our program. Hence the output of the code shown above will be 2, since 2 was generated previously following which we used the seed function.

10. What is the interval of the value generated by the function random.random(), assuming that the random module has already been imported?
a) (0,1)
b) (0,1]
c) [0,1]
d) [0,1)
Answer: d
Explanation: The function random.random() generates a random value in the interval [0,1), that is, including zero but excluding one. 
11. What will be the output of the following Python code?
random.randrange(0,91,5)
a) 10
b) 18
c) 79
d) 95
Answer: a
Explanation: The function shown above will generate an output which is a multiple of 5 and is between 0 and 91. The only option which satisfies these criteria is 10. Hence the only possible output of this function is 10.
12. Both the functions randint and uniform accept ____________ parameters.
a) 0
b) 1
c) 3
d) 2
Answer: d
Explanation: Both of these functions, that is, randint and uniform are included in the random module and both of these functions accept 2 parameters. For example: random.uniform(a,b) where ‘a’ and ‘b’ specify the range.
13. The randrange function returns only an integer value.
a) True
b) False
Answer: a
Explanation: The function randrange returns only an integer value. Hence this statement is true.
14. What will be the output of the following Python code?
random.randrange(1,100,10)
a) 32
b) 67
c) 91
d) 80
Answer: c
Explanation: The output of this function can be any value which is a multiple of 10, plus 1. Hence a value like 11, 21, 31, 41…91 can be the output. Also, the value should necessarily be between 1 and 100. The only option which satisfies this criteria is 91.
15. What will be the output of the following Python function, assuming that the random library has already been included?
random.shuffle[1,2,24]
a) Randomized list containing the same numbers in any order
b) The same list, that is [1,2,24] 
c) A list containing any random numbers between 1 and 24


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Random Module – 2
-----------------------------------------------------------------------------------------------------------------
1. What the does random.seed(3) return?
a) True
b) None
c) 3
d) 1
Answer: b
Explanation: The function random.seed() always returns a None.

2. Which of the following cannot be returned by random.randrange(4)?
a) 0
b) 3
c) 2.3
d) none of the mentioned
Answer: c
Explanation: Only integers can be returned.
3. Which of the following is equivalent to random.randrange(3)?
a) range(3)
b) random.choice(range(0, 3))
c) random.shuffle(range(3))
d) random.select(range(3))
Answer: b
Explanation: It returns one number from the given range.
4. The function random.randint(4) can return only one of the following values. Which?
a) 4
b) 3.4
c) error
d) 5
Answer: c
Explanation: Error, the function takes two arguments.
5. Which of the following is equivalent to random.randint(3, 6)?
a) random.choice([3, 6])
b) random.randrange(3, 6)
c) 3 + random.randrange(3)
d) 3 + random.randrange(4)
Answer: d
Explanation: random.randint(3, 6) can return any one of 3, 4, 5 and 6.


6. Which of the following will not be returned by random.choice(“1 ,”)?
a) 1
b) (space)
c) ,
d) none of the mentioned
Answer: d
Explanation: Any of the characters present in the string may be returned.
7. Which of the following will never be displayed on executing print(random.choice({0: 1, 2: 3}))?
a) 0
b) 1
c) KeyError: 1
d) none of the mentioned
Answer: a
Explanation: It will not print 0 but dict[0] i.e. 1 may be printed.
8. What does random.shuffle(x) do when x = [1, 2, 3]?
a) error
b) do nothing, it is a placeholder for a function that is yet to be implemented
c) shuffle the elements of the list in-place
d) none of the mentioned
Answer: c
Explanation: The elements of the list passed to it are shuffled in-place.
9. Which type of elements are accepted by random.shuffle()?
a) strings
b) lists
c) tuples
d) integers
Answer: b
Explanation: Strings and tuples are immutable and an integer has no len().

10. What is the range of values that random.random() can return?
a) [0.0, 1.0] 
b) (0.0, 1.0] 
c) (0.0, 1.0)
d) [0.0, 1.0)
Answer: d
Explanation: Any number that is greater than or equal to 0.0 and lesser than 1.0 can be returned.


-----------------------------------------------------------------------------------------------------------------

Python Question and Answers – Sys Module
-----------------------------------------------------------------------------------------------------------------
1. Which of the following functions can help us to find the version of python that we are currently working on?
a) sys.version
b) sys.version()
c) sys.version(0)
d) sys.version(1)
Answer: a
Explanation: The function sys.version can help us to find the version of python that we are currently working on. For example, 3.5.2, 2.7.3 etc. this function also returns the current date, time, bits etc along with the version.

2. Which of the following functions is not defined under the sys module?
a) sys.platform
b) sys.path
c) sys.readline
d) sys.argv
Answer: c
Explanation: The functions sys.platform, sys.path and sys.argv are defined under the sys module. The function sys.readline is not defined. However, sys.stdin.readline is defined.
3. The output of the functions len(“abc”) and sys.getsizeof(“abc”) will be the same.
a) True
b) False
Answer: b
Explanation: The function len returns the length of the string passed, and hence it’s output will be 3. The function getsizeof, present under the sys module returns the size of the object passed. It’s output will be a value much larger than 3. Hence the above statement is false.
4. What will be the output of the following Python code, if the code is run on Windows operating system?
import sys
if sys.platform[:2]== 'wi':
	print("Hello")
a) Error
b) Hello
c) No output
d) Junk value
Answer: b
Explanation: The output of the function sys.platform[:2] is equal to ‘wi’, when this code is run on windows operating system. Hence the output printed is ‘hello’.
5. What will be the output of the following Python code, if the sys module has already been imported?


sys.stdout.write("hello world")
a) helloworld
b) hello world10
c) hello world11
d) error
Answer: c
Explanation: The function shown above prints the given string along with the length of the string. Hence the output of the function shown above will be hello world11.
6. What will be the output of the following Python code?
import sys
sys.stdin.readline()
Sanfoundry
a) ‘Sanfoundry\n’
b) ‘Sanfoundry’
c) ‘Sanfoundry10’
d) Error
Answer: a
Explanation: The function shown above works just like raw_input. Hence it automatically adds a ‘\n’ character to the input string. Therefore, the output of the function shown above will be: Sanfoundry\n.
7. What will be the output of the following Python code?
import sys
eval(sys.stdin.readline())
"India"
a) India5
b) India
c) ‘India\n’
d) ‘India’
Answer: d
Explanation: The function shown above evaluates the input into a string. Hence if the input entered is enclosed in double quotes, the output will be enclosed in single quotes. Therefore, the output of this code is ‘India’.

8. What will be the output of the following Python code?
import sys
eval(sys.stdin.readline())
Computer
a) Error
b) ‘Computer\n’
c) Computer8
d) Computer
Answer: a
Explanation: The code shown above will result in an error. This is because this particular function accepts only strings enclosed in single or double inverted quotes, or numbers. Since the string entered above is not enclosed in single or double inverted quotes, an error will be thrown.
9. What will be the output of the following Python code?
import sys
sys.argv[0]
a) Junk value
b) ‘ ‘
c) No output
d) Error
Answer: b
Explanation: The output of the function shown above will be a blank space enclosed in single quotes. Hence the output of the code shown above is ‘ ‘.
10. What will be the output of the following Python code?

import sys
sys.stderr.write(“hello”)
a) ‘hello’
b) ‘hello\n’
c) hello
d) hello5
Answer: d
Explanation: The code shown above returns the string, followed by the length of the string. Hence the output of the code shown above is hello5.
11. What will be the output of the following Python code?
import sys
sys.argv
a) ‘ ‘
b) [ ] 
c) [‘ ‘] 
d) Error
Answer: c
Explanation: The output of the code shown above is a blank space inserted in single quotes, which is enclosed by square brackets. Hence the output will be [‘ ‘].
12. To obtain a list of all the functions defined under sys module, which of the following functions can be used?
a) print(sys)
b) print(dir.sys)
c) print(dir[sys])
d) print(dir(sys))
Answer: d
Explanation: The function print(dir(sys)) helps us to obtain a list of all the functions defined under the sys module. The function can be used to obtain the list of functions under any given module in Python.
13. The output of the function len(sys.argv) is ____________
a) Error
b) 1
c) 0
d) Junk value
Answer: b
Explanation: The output of the function sys.argv is [‘ ‘]. When we execute the function len([‘ ‘]), the output is 1. Hence the output of the function len(sys.argv) is also 1.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Operating System
-----------------------------------------------------------------------------------------------------------------
1. What does os.name contain?
a) the name of the operating system dependent module imported
b) the address of the module os
c) error, it should’ve been os.name()
d) none of the mentioned
Answer: a
Explanation: It contains the name of the operating system dependent module imported such as ‘posix’, ‘java’ etc.

2. What does print(os.geteuid()) print?
a) the group id of the current process
b) the user id of the current process
c) both the group id and the user of the current process
d) none of the mentioned
Answer: b
Explanation: os.geteuid() gives the user id while the os.getegid() gives the group id.
3. What does os.getlogin() return?
a) name of the current user logged in
b) name of the superuser
c) gets a form to login as a different user
d) all of the mentioned
Answer: a
Explanation: It returns the name of the user who is currently logged in and is running the script.
4. What does os.close(f) do?
a) terminate the process f
b) terminate the process f if f is not responding
c) close the file descriptor f
d) return an integer telling how close the file pointer is to the end of file
Answer: c
Explanation: When a file descriptor is passed as an argument to os.close() it will be closed.
5. What does os.fchmod(fd, mode) do?
a) change permission bits of the file
b) change permission bits of the directory
c) change permission bits of either the file or the directory
d) none of the mentioned
Answer: a
Explanation: The arguments to the function are a file descriptor and the new mode.


6. Which of the following functions can be used to read data from a file using a file descriptor?
a) os.reader()
b) os.read()
c) os.quick_read()
d) os.scan()
Answer: b
Explanation: None of the other functions exist.
7. Which of the following returns a string that represents the present working directory?
a) os.getcwd()
b) os.cwd()
c) os.getpwd()
d) os.pwd()
Answer: a
Explanation: The function getcwd() (get current working directory) returns a string that represents the present working directory.
8. What does os.link() do?
a) create a symbolic link
b) create a hard link
c) create a soft link
d) none of the mentioned
Answer: b
Explanation: os.link(source, destination) will create a hard link from source to destination.
9. Which of the following can be used to create a directory?
a) os.mkdir()
b) os.creat_dir()
c) os.create_dir()
d) os.make_dir()
Answer: a
Explanation: The function mkdir() creates a directory in the path specified.

10. Which of the following can be used to create a symbolic link?
a) os.symlink()
b) os.symb_link()
c) os.symblin()
d) os.ln()
Answer: a
Explanation: It is the function that allows you to create a symbolic link.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Turtle Module – 3
-----------------------------------------------------------------------------------------------------------------
1. Which of the following functions results in an error?
a) turtle.shape(“turtle”)
b) turtle.shape(“square”)
c) turtle.shape(“triangle”)
d) turtle.shape(“rectangle”)
Answer: d
Explanation: The functions shown above will change the arrow to the shape mentioned. The functions turtle.shape(“turtle”), turtle.shape(“square”) and turtle.shape(“triangle”) are valid whereas the function turtle.shape(“rectangle”) is invalid.

2. What will be the output of the following Python code?
import turtle
t=turtle.Pen
t.tilt(75)
t.forward(100)
a) A straight line of 100 units tiled at 75 degrees from the horizontal
b) A straight line of 100 units tilted at 15 degrees from the horizontal
c) A straight line of 100 units lying along the horizontal
d) Error
Answer: c
Explanation: The function turtle.tilt(75) will tilt the turtle. But the straight line (of 100 units) is drawn along the horizontal. Hence the output of the code shown above is a straight line of 100 units lying along the horizontal.
3. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.backward(100)
t.penup()
t.right(45)
t.isdown()
a) True
b) False
c) Yes
d) No
Answer: b
Explanation: In the code shown above, we have used the function t.penup() to life the pen from the canvas. However, we have not used the function t.pendown() to keep the pen back down. The function turtle.isdown() returns True if the pen is down and False if the pen is not down. Hence the output is False.


4. The function used to alter the thickness of the pen to ‘x’ units:
a) turtle.width(x)
b) turtle.span(x)
c) turtle.girth(x)
d) turtle.thickness(x)
Answer: a
Explanation: The function turtle.width(x) is used to alter the thickness of the pen to ‘x’ units. The function turtle.span(x), turtle.girth(x) and turtle.thickness(x) are invalid.
5. What will be the output of the following Python code if the system date is 18th June, 2017 (Sunday)?
import turtle
t=turtle.Pen()
t.goto(100,0)
t.towards(0,0)
a) 0.0
b) 180.0
c) 270.0
d) 360.0
Answer: b
Explanation: The function t.towards(x,y) returns the angle between the line to the line specified by (x,y). Hence the output will be 180.0.
6. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.position()
(100.00,0.00)
t.goto(100,100)
t.distance(100,0)
a) 0.0
b) Error
c) 100.0, 100.0
d) 100.0
Answer: d
Explanation: The distance() function returns the distance between the turtle to the given vector. Hence the output of the code shown above is 100.0.

7. The output of the following Python code will result in a shape similar to the alphabet ___________
import turtle
t=turtle.Turtle()
t1=turtle.Turtle()
t.left(45)
t1.left(135)
t.forward(100)
t1.forward(100)
a) V
b) Inverted V
c) X
d) T
Answer: a
Explanation: In the code shown above, two pens have been used to create a shape similar to the alphabet ‘V’. The angle between the two straight lines is 90 degrees.
8. The output of the following Python code is similar to the alphabet _______________
import turtle
t=turtle.Pen()
t1=turtle.Pen()
t2=turtle.Pen()
t.forward(100)
t1.forward(100)
t2.forward(100)
t1.left(90)
t1.forward(75)
t2.right(90)
t2.forward(75)
a) X
b) N
c) T
d) M
Answer: c
Explanation: In the above code, three pens have been used to create a shape similar to the letter ‘T’. All the three straight lines are mutually perpendicular.
9. The following Python code will result in an error.
import turtle
t=turtle.Pen()
t.speed(-45)
t.circle(30)
a) True
b) False
Answer: b
Explanation: Although a negative speed is not possible, the code shown above does not result in an error. Hence, the answer is False.

10. What will be the output of the following Python code?
import turtle()
t=turtle.Pen()
t.goto(50,60)
t1=t.clone()
t1.ycor()
a) 0.0
b) 50.0
c) 60.0
d) Error
Answer: c
Explanation: The function clone() is used to create a clone of the turtle, having the same properties such as position, coordinates etc. Hence, the properties of the t and t1 are the same in the code shown above. The function ycor() returns the y-coordinate of the turtle. Hence the output of the code is 60.0.
11. What will be the output shape of the following Python code?
import turtle
t=turtle.Pen()
for i in range(0,6):
	t.forward(100)
	t.left(60)
a) Hexagon
b) Octagon
c) Pentagon
d) Heptagon
Answer: a
Explanation: The code shown above creates a six-sided polygon. The output shape of the code shown above is will be a hexagon.
12. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.resizemode(“sanfoundry”)
t.resizemode()
a) user
b) auto
c) nonresize
d) error
Answer: c
Explanation: When not explicitly specified as auto or user, no adaption of the turtle’s appearance takes place and the mode is ‘noresize’. Hence the output of the code is: noresize.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Pickle Module
-----------------------------------------------------------------------------------------------------------------
1. The process of pickling in Python includes:
a) conversion of a list into a datatable
b) conversion of a byte stream into Python object hierarchy
c) conversion of a Python object hierarchy into byte stream
d) conversion of a datatable into a list
Answer: c
Explanation: Pickling is the process of sterilizing a Python object, that is, conversion of a byte stream into Python object hierarchy. The reverse of this process is known as unpickling.

2. To sterilize an object hierarchy, the _____________ function must be called. To desterilize a data stream, the ______________ function must be called.
a) dumps(), undumps()
b) loads(), unloads()
c) loads(), dumps()
d) dumps(), loads()
Answer: d
Explanation: To sterilize an object hierarchy, the dumps() function must be called. To desterilize a data stream, the loads function must be called.
3. Pick the correct statement regarding pickle and marshal modules.
a) The pickle module supports primarily .pyc files whereas marshal module is used to sterilize Python objects
b) The pickle module keeps track of the objects that have already been sterilized whereas the marshal module does not do this
c) The pickle module cannot be used to sterilize user defined classes and their instances whereas marshal module can be used to perform this task
d) The format of sterilization of the pickle module is not guaranteed to be supported across all versions of Python. The marshal module sterilization is compatible across all the versions of Python
Answer: b
Explanation: The correct statement from among the above options is that the python module keeps track of the objects that have already been sterilized whereas the marshal module does not do this. The rest of the statements are incorrect.
4. What will be the output of the following Python code?
pickle.HIGHEST_PROTOCOL
a) 4
b) 5
c) 3
d) 6
Answer: a
Explanation: There are five protocol versions available of the pickle module, namely, 0, 1, 2, 3 and 4. In the code shown above, the highest protocol version is returned, that is, 4.


5. Which of the following Python codes will result in an error?
object = ‘a’
a) >>> pickle.dumps(object)
b) >>> pickle.dumps(object, 3)
c) >>> pickle.dumps(object, 3, True)
d) >>> pickle.dumps(‘a’, 2)
Answer: c
Explanation: The function pickle.dumps requires either 1 or 2 arguments. If any other number of arguments are passed to it, it results in an error. An error is thrown even when no arguments are passed to it.
6. Which of the following functions can be used to find the protocol version of the pickle module currently being used?
a) pickle.DEFAULT
b) pickle.CURRENT
c) pickle.CURRENT_PROTOCOL
d) pickle.DEFAULT_PROTOCOL
Answer: d
Explanation: The function pickle.DEFAULT_PROTOCOL can be used to find the protocol version of the pickle module currently being used by the system.

7. The output of the following two Python codes is exactly the same.
object
'a'
CODE 1
>>> pickle.dumps('a', 3)
CODE 2
>>> pickle.dumps(object, 3)
a) True
b) False
Answer: a
Explanation: The two codes shown above result in the same output, that is, b’\x80\x03X\x01\x00\x00\x00aq\x00.’ Hence this statement is true.
8. Which of the following functions can accept more than one positional argument?
a) pickle.dumps
b) pickle.loads
c) pickle.dump
d) pickle.load
Answer: a
Explanation: The functions pickle.loads, pickle.dump and pickle.load accept only one argument. The function pickle.dumps can accept more than one argument.
9. Which of the following functions raises an error when an unpicklable object is encountered by Pickler?
a) pickle.PickleError
b) pickle.PicklingError
c) pickle.UnpickleError
d) pickle.UnpicklingError
Answer: b
Explanation: The function pickle.PicklingError raises an error when an unpickable object is encountered by Pickler.

10. The pickle module defines ______ exceptions and exports _______ classes.
a) 2, 3
b) 3, 4
c) 3, 2
d) 4, 3
Answer: c
Explanation: The pickle module defines three exceptions, namely, pickle.PickleError, pickle.PicklingError, pickle.UnpickleError and exports two classes, namely, pickle.Pickler and pickle.Unpickler.
11. Which of the following cannot be pickled?
a) Functions which are defined at the top level of a module with lambda
b) Functions which are defined at the top level of a module with def
c) Built-in functions which are defined at the top level of a module
d) Classes which are defined at the top level of a module
Answer: a
Explanation: Functions which are defined at the top level of a module with lambda cannot be pickled. 
12. If __getstate__() returns _______________ the __setstate__() module will not be called on pickling.
a) True value
b) False value
c) ValueError
d) OverflowError
Answer: b
Explanation: If getstate__() returns a false value, the __setstate__()  module will not be called on pickling.
13. Lambda functions cannot be pickled because:
a) Lambda functions only deal with binary values, that is, 0 and 1
b) Lambda functions cannot be called directly
c) Lambda functions cannot be identified by the functions of the pickle module
d) All lambda functions have the same name, that is, <lambda>
Answer: d
Explanation: Lambda functions cannot be pickled because all the lambda functions have the same name, that is, <lambda>
14. The module _______________ is a comparatively faster implementation of the pickle module.
a) cPickle
b) nPickle
c) gPickle
d) tPickle
Answer: a
Explanation: The module cPickle is a comparatively faster implementation of the pickle module.
15. The copy module uses the ___________________ protocol for shallow and deep copy.
a) pickle
b) marshal
c) shelve
d) copyreg
Answer: a
Explanation: The copy module uses the pickle protocol for shallow and deep copy.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Regular Expressions
-----------------------------------------------------------------------------------------------------------------
1. Which module in Python supports regular expressions?
a) re
b) regex
c) pyregex
d) none of the mentioned
Answer: a
Explanation: re is a part of the standard library and can be imported using: import re.

2. Which of the following creates a pattern object?
a) re.create(str)
b) re.regex(str)
c) re.compile(str)
d) re.assemble(str)
Answer: c
Explanation: It converts a given string into a pattern object.
3. What does the function re.match do?
a) matches a pattern at the start of the string
b) matches a pattern at any position in the string
c) such a function does not exist
d) none of the mentioned
Answer: a
Explanation: It will look for the pattern at the beginning and return None if it isn’t found.
4. What does the function re.search do?
a) matches a pattern at the start of the string
b) matches a pattern at any position in the string
c) such a function does not exist
d) none of the mentioned
Answer: b
Explanation: It will look for the pattern at any position in the string.
5. What will be the output of the following Python code?


sentence = 'we are humans'
matched = re.match(r'(.*) (.*?) (.*)', sentence)
print(matched.groups())
a) (‘we’, ‘are’, ‘humans’)
b) (we, are, humans)
c) (‘we’, ‘humans’)
d) ‘we are humans’
Answer: a
Explanation: This function returns all the subgroups that have been matched.
6. What will be the output of the following Python code?
sentence = 'we are humans'
matched = re.match(r'(.*) (.*?) (.*)', sentence)
print(matched.group())
a) (‘we’, ‘are’, ‘humans’)
b) (we, are, humans)
c) (‘we’, ‘humans’)
d) ‘we are humans’
Answer: d
Explanation: This function returns the entire match.

7. What will be the output of the following Python code?
sentence = 'we are humans'
matched = re.match(r'(.*) (.*?) (.*)', sentence)
print(matched.group(2))
a) ‘are’
b) ‘we’
c) ‘humans’
d) ‘we are humans’
Answer: c
Explanation: This function returns the particular subgroup.
8. What will be the output of the following Python code?
sentence = 'horses are fast'
regex = re.compile('(?P<animal>\w+) (?P<verb>\w+) (?P<adjective>\w+)')
matched = re.search(regex, sentence)
print(matched.groupdict())
a) {‘animal’: ‘horses’, ‘verb’: ‘are’, ‘adjective’: ‘fast’}
b) (‘horses’, ‘are’, ‘fast’)
c) ‘horses are fast’
d) ‘are’
Answer: a
Explanation: This function returns a dictionary that contains all the matches.

9. What will be the output of the following Python code?
sentence = 'horses are fast'
regex = re.compile('(?P<animal>\w+) (?P<verb>\w+) (?P<adjective>\w+)')
matched = re.search(regex, sentence)
print(matched.groups())
a) {‘animal’: ‘horses’, ‘verb’: ‘are’, ‘adjective’: ‘fast’}
b) (‘horses’, ‘are’, ‘fast’)
c) ‘horses are fast’
d) ‘are’
Answer: b
Explanation: This function returns all the subgroups that have been matched.
10. What will be the output of the following Python code?
sentence = 'horses are fast'
regex = re.compile('(?P<animal>\w+) (?P<verb>\w+) (?P<adjective>\w+)')
matched = re.search(regex, sentence)
print(matched.group(2))
a) {‘animal’: ‘horses’, ‘verb’: ‘are’, ‘adjective’: ‘fast’}
b) (‘horses’, ‘are’, ‘fast’)
c) ‘horses are fast’
d) ‘are’
Answer: d
Explanation: This function returns the particular subgroup.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Regular Expressions – 1
-----------------------------------------------------------------------------------------------------------------
1. The character Dot (that is, ‘.’) in the default mode, matches any character other than _____________
a) caret
b) ampersand
c) percentage symbol
d) newline
Answer: d
Explanation: The character Dot (that is, ‘,’) in the default mode, matches any character other than newline. If DOTALL flag is used, then it matches any character other than newline.

2. The expression a{5} will match _____________ characters with the previous regular expression.
a) 5 or less
b) exactly 5
c) 5 or more
d) exactly 4
Answer: b
Explanation: The character {m} is used to match exactly m characters to the previous regular expression. Hence the expression a{5} will match exactly 5 characters and not less than that.
3. ________ matches the start of the string.
    ________ matches the end of the string.
a) ‘^’, ‘$’
b) ‘$’, ‘^’
c) ‘$’, ‘?’
d) ‘?’, ‘^’
Answer: a
Explanation: ‘^’ (carat) matches the start of the string.
             ‘$’ (dollar sign) matches the end of the string.
4. Which of the following will result in an error?
a) 
>>> p = re.compile("d")

>>> p.search("door")
b) >>> p = re.escape(‘hello’)
c) >>> p = re.subn()
d) >>> p = re.purge()
Answer: c
Explanation: The function re.subn() will result in an error. This is because subn() requires 3 positional arguments while we have entered none.


5. What will be the output of the following Python code?
re.split('\W+', 'Hello, hello, hello.')
a) [‘Hello’, ‘hello’, ‘hello.’]
b) [‘Hello, ‘hello’, ‘hello’]
c) [‘Hello’, ‘hello’, ‘hello’, ‘.’]
d) [‘Hello’, ‘hello’, ‘hello’, ”]
Answer: d
Explanation: In the code shown above, the function split() splits the string based on the pattern given as an argument in the parenthesis. Note: split will never split a string on an empty pattern match. Hence the output of this code is: [‘Hello’, ‘hello’, ‘hello’, ”].
6. What will be the output of the following Python function?
re.findall("hello world", "hello", 1)
a) [“hello”]
b) [	]
c) hello
d) hello world
Answer: b
Explanation: The function findall returns the word matched if and only if both the pattern and the string match completely, that is, they are exactly the same. Observe the example shown below:
>>> re.findall(“hello”, “hello”, 1)                                                                                                                                                      The output is: [‘hello’]                                                                                                                                                                     Hence the output of the code shown in this question is [].

7. Choose the function whose output can be: <_sre.SRE_Match object; span=(4, 8), match=’aaaa’>.
a) >>> re.search(‘aaaa’, “alohaaaa”, 0)
b) >>> re.match(‘aaaa’, “alohaaaa”, 0)
c) >>> re.match(‘aaa’, “alohaaa”, 0)
d) >>> re.search(‘aaa’, “alohaaa”, 0)
Answer: a
Explanation: The output shown above is that of a search function, whose pattern is ‘aaaa’ and the string is that of 8 characters. The only option which matches all these criteria is:
 >>> re.search(‘aaaa’, “alohaaaa”, 0)
8.  Which of the following functions clears the regular expression cache?
a) re.sub()
b) re.pos()
c) re.purge()
d) re.subn()
Answer: c
Explanation: The function which clears the regular expression cache is re.purge(). Note that this function takes zero positional arguments.
9. What will be the output of the following Python code?
import re
re.ASCII
a) 8
b) 32
c) 64
d) 256
Answer: d
Explanation: The expression re.ASCII returns the total number of ASCII characters that are present, that is 256. This can also be abbreviated as re.A, which results in the same output (that is, 256).

10. Which of the following functions results in case insensitive matching?
a) re.A
b) re.U
c) re.I
d) re.X
Answer: c
Explanation: The function re.I (that is, re.IGNORECASE) results in case-insensitive matching. That is, expressions such as [A-Z] will match lowercase characters too.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Regular Expressions – 5
-----------------------------------------------------------------------------------------------------------------
1. Which of the following functions returns a dictionary mapping group names to group numbers?
a) re.compile.group
b) re.compile.groupindex
c) re.compile.index
d) re.compile.indexgroup
Answer: b
Explanation: The function re.compile.groupindex returns a dictionary mapping group names to group numbers.

2. Which of the following statements regarding the output of the function re.match is incorrect?
a) ‘pq*’ will match ‘pq’
b) ‘pq?’ matches ‘p’
c) ‘p{4}, q’ does not match ‘pppq’
d) ‘pq+’ matches ‘p’
Answer: d
Explanation: All of the above statements are correct except that ‘pq+’ match ‘p’. ‘pq+’ will match ‘p’ followed by any non-zero number of q’s, but it will not match ‘p’.
3. The following Python code snippet results in an error.
c=re.compile(r'(\d+)(\[A-Z]+)([a-z]+)')
c.groupindex
a) True
b) False
Answer: b
Explanation: In the code shown above, none of the group names match the group numbers. In such a case, no error is thrown. The output of the code is an empty dictionary, that is, {}.


4. Which of the following functions does not accept any argument?
a) re.purge
b) re.compile
c) re.findall
d) re.match
Answer: a
Explanation: The function re.purge is used to clear the cache and it does not accept any arguments.
5. What will be the output of the following Python code?
a = re.compile('0-9')
a.findall('3 trees')
a) []
b) [‘3’]
c) Error
d) [‘trees’]
Answer: c
Explanation: The output of the code shown above is an empty list. This is due to the way the arguments have been passed to the function re.compile. Carefully read the code shown below in order to understand the correct syntax:
>>> a = re.compile(‘[0-9]’)
>>> a.findall(‘3 trees’)
[‘3’].
6. Which of the following lines of code will not show a match?
a) >>> re.match(‘ab*’, ‘a’)
b) >>> re.match(‘ab*’, ‘ab’)
c) >>> re.match(‘ab*’, ‘abb’)
d) >>> re.match(‘ab*’, ‘ba’)
Answer: d
Explanation: In the code shown above, ab* will match to ‘a’ or ‘ab’ or ‘a’ followed by any number of b’s. Hence the only line of code from the above options which does not result in a match is:
>>> re.match(‘ab*’, ‘ba’).

7. What will be the output of the following Python code?
m = re.search('a', 'The blue umbrella')
m.re.pattern
a) {}
b)  ‘The blue umbrella’
c) ‘a’
d) No output
Answer: c
Explanation: The PatternObject is used to produce the match. The real regular expression pattern string must be retrieved from the PatternObject’s pattern method. Hence the output of this code is: ‘a’.
8. What will be the output of the following Python code?
re.sub('Y', 'X', 'AAAAAA', count=2)
a) ‘YXAAAA’
b) (‘YXAAAA’)
c) (‘AAAAAA’)
d) ‘AAAAAA’
Answer: d
Explanation: The code shown above demonstrates the function re.sub, which returns a string. The pattern specified is substituted in the string and returned. Hence the output of the code shown above is:  ‘AAAAAA’.



-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Files – 1
-----------------------------------------------------------------------------------------------------------------
1. To open a file c:\scores.txt for reading, we use _____________
a) infile = open(“c:\scores.txt”, “r”)
b) infile = open(“c:\\scores.txt”, “r”)
c) infile = open(file = “c:\scores.txt”, “r”)
d) infile = open(file = “c:\\scores.txt”, “r”)
 Answer: b
Explanation: Execute help(open) to get more details.

2. To open a file c:\scores.txt for writing, we use ____________
a) outfile = open(“c:\scores.txt”, “w”)
b) outfile = open(“c:\\scores.txt”, “w”)
c) outfile = open(file = “c:\scores.txt”, “w”)
d) outfile = open(file = “c:\\scores.txt”, “w”)
 Answer: b
Explanation: w is used to indicate that file is to be written to. 
3. To open a file c:\scores.txt for appending data, we use ____________
a) outfile = open(“c:\\scores.txt”, “a”)
b) outfile = open(“c:\\scores.txt”, “rw”)
c) outfile = open(file = “c:\scores.txt”, “w”)
d) outfile = open(file = “c:\\scores.txt”, “w”)
 Answer: a
Explanation: a is used to indicate that data is to be appended. 
4. Which of the following statements are true?
a) When you open a file for reading, if the file does not exist, an error occurs
b) When you open a file for writing, if the file does not exist, a new file is created
c) When you open a file for writing, if the file exists, the existing file is overwritten with the new file
d) All of the mentioned
 Answer: d
Explanation: The program will throw an error.
5. To read two characters from a file object infile, we use ____________
a) infile.read(2)
b) infile.read()
c) infile.readline()
d) infile.readlines()
 Answer: a
Explanation: Execute in the shell to verify.


6. To read the entire remaining contents of the file as a string from a file object infile, we use ____________
a) infile.read(2)
b) infile.read()
c) infile.readline()
d) infile.readlines()
 Answer: b
Explanation: read function is used to read all the lines in a file. 
7. What will be the output of the following Python code?
f = Nonefor i in range (5):    with open("data.txt", "w") as f:        if i > 2:            breakprint(f.closed)
a) True
b) False
c) None
d) Error
 Answer: a
Explanation: The WITH statement when used with open file guarantees that the file object is closed when the with block exits.

8. To read the next line of the file from a file object infile, we use ____________
a) infile.read(2)
b) infile.read()
c) infile.readline()
d) infile.readlines()
 Answer: c
Explanation: Execute in the shell to verify.
9. To read the remaining lines of the file from a file object infile, we use ____________
a) infile.read(2)
b) infile.read()
c) infile.readline()
d) infile.readlines()
 Answer: d
Explanation: Execute in the shell to verify.
10. The readlines() method returns ____________
a) str
b) a list of lines
c) a list of single characters
d) a list of integers
 Answer: b
Explanation: Every line is stored in a list and returned.
Sanfoundry Global Education & Learning Series – Python.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Files – 2
-----------------------------------------------------------------------------------------------------------------
1. Which are the two built-in functions to read a line of text from standard input, which by default comes from the keyboard?
a) Raw_input & Input
b) Input & Scan
c) Scan & Scanner
d) Scanner
 Answer: a
Explanation: Python provides two built-in functions to read a line of text from standard input, which by default comes from the keyboard. These functions are:
raw_input and input 

2. What will be the output of the following Python code?
str = raw_input("Enter your input: ");print "Received input is : ", str
a) 
Enter your input: Hello Python

Received input is :  Hello Python
b) 
Enter your input: Hello Python

Received input is :  Hello 
c) 
Enter your input: Hello Python

Received input is :  Python
d) None of the mentioned
 Answer: a
Explanation: The raw_input([prompt]) function reads one line from standard input and returns it as a string. This would prompt you to enter any string and it would display same string on the screen. When I typed “Hello Python!” 


3. What will be the output of the following Python code?
str = input("Enter your input: ");print "Received input is : ", str
a) 
Enter your input: [x*5 for x in range(2,10,2)]

Received input is :  [x*5 for x in range(2,10,2)]
b) 
Enter your input: [x*5 for x in range(2,10,2)]

Received input is :  [10, 30, 20, 40]
c) 
Enter your input: [x*5 for x in range(2,10,2)]

Received input is :  [10, 10, 30, 40]
d) None of the mentioned
 Answer: a
Explanation: None. 
4. Which one of the following is not attributes of file?
a) closed
b) softspace
c) rename
d) mode
 Answer: c
Explanation: rename is not the attribute of file rest all are files attributes.


Attribute	Description



-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Files – 3
-----------------------------------------------------------------------------------------------------------------
1. Which is/are the basic I/O connections in file?
a) Standard Input
b) Standard Output
c) Standard Errors
d) All of the mentioned
 Answer: d
Explanation: Standard input, standard output and standard error. Standard input is the data that goes to the program. The standard input comes from a keyboard. Standard output is where we print our data with the print keyword. Unless redirected, it is the terminal console. The standard error is a stream where programs write their error messages. It is usually the text terminal. 

2. What will be the output of the following Python code? (If entered name is sanfoundry)
import sysprint 'Enter your name: ',name = ''while True:   c = sys.stdin.read(1)   if c == '\n':      break   name = name + c print 'Your name is:', name
a) sanfoundry
b) sanfoundry, sanfoundry
c) San
d) None of the mentioned
 Answer: a
Explanation: In order to work with standard I/O streams, we must import the sys module. The read() method reads one character from the standard input. In our example we get a prompt saying “Enter your name”. We enter our name and press enter. The enter key generates the new line character: \n.
Output:
Enter your name: sanfoundry
 Your name is: sanfoundry

3. What will be the output of the following Python code?


import syssys.stdout.write(' Hello\n')sys.stdout.write('Python\n')
a) Compilation Error
b) Runtime Error
c) Hello Python
d) 
Hello

Python
 Answer: d
Explanation: None
Output:
  Hello
Python

  
4. Which of the following mode will refer to binary data?
a) r
b) w
c) +
d) b
 Answer:d
Explanation: Mode Meaning is as explained below:
r Reading
w Writing
a Appending
b Binary data
+ Updating.
 
5. What is the pickling?
a) It is used for object serialization
b) It is used for object deserialization
c) None of the mentioned
d) All of the mentioned
 Answer: a
Explanation:  Pickle is the standard mechanism for object serialization. Pickle uses a simple stack-based virtual machine that records the instructions used to reconstruct the object. This makes pickle vulnerable to security risks by malformed or maliciously constructed data, that may cause the deserializer to import arbitrary modules and instantiate any object.
 
6. What is unpickling?
a) It is used for object serialization
b) It is used for object deserialization
c) None of the mentioned
d) All of the mentioned
 Answer: b
Explanation: We have been working with simple textual data. What if we are working with objects rather than simple text? For such situations, we can use the pickle module. This module serializes Python objects. The Python objects are converted into byte streams and written to text files. This process is called pickling. The inverse operation, reading from a file and reconstructing objects is called deserializing or unpickling. 

7. What is the correct syntax of open() function?
a) file = open(file_name [, access_mode][, buffering])
b) file object = open(file_name [, access_mode][, buffering])
c) file object = open(file_name)
d) none of the mentioned
 Answer: b
Explanation: Open() function correct syntax with the parameter details as shown below:
file object = open(file_name [, access_mode][, buffering])
Here is parameters’ detail:
file_name: The file_name argument is a string value that contains the name of the file that you want to access.
access_mode: The access_mode determines the mode in which the file has to be opened, i.e., read, write, append, etc. A complete list of possible values is given below in the table. This is optional parameter and the default file access mode is read (r).
buffering: If the buffering value is set to 0, no buffering will take place. If the buffering value is 1, line buffering will be performed while accessing a file. If you specify the buffering value as an integer greater than 1, then buffering action will be performed with the indicated buffer size. If negative, the buffer size is the system default(default behavior). 
8. What will be the output of the following Python code?
fo = open("foo.txt", "wb")print "Name of the file: ", fo.namefo.flush()fo.close()
a) Compilation Error
b) Runtime Error
c) No Output
d) Flushes the file when closing them
 Answer: d
Explanation: The method flush() flushes the internal buffer. Python automatically flushes the files when closing them. But you may want to flush the data before closing any file. 
9. Correct syntax of file.writelines() is?
a) file.writelines(sequence)
b) fileObject.writelines()
c) fileObject.writelines(sequence)
d) none of the mentioned
 Answer: c
Explanation: The method writelines() writes a sequence of strings to the file. The sequence can be any iterable object producing strings, typically a list of strings. There is no return value.
Syntax
Following is the syntax for writelines() method:
fileObject.writelines( sequence ).

10. Correct syntax of file.readlines() is?
a) fileObject.readlines( sizehint );
b) fileObject.readlines();
c) fileObject.readlines(sequence)
d) none of the mentioned
 Answer: a
Explanation: The method readlines() reads until EOF using readline() and returns a list containing the lines. If the optional sizehint argument is present, instead of reading up to EOF, whole lines totalling approximately sizehint bytes (possibly after rounding up to an internal buffer size) are read.
Syntax
Following is the syntax for readlines() method:
fileObject.readlines( sizehint );
Parameters
sizehint — This is the number of bytes to be read from the file. 


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Files – 4
-----------------------------------------------------------------------------------------------------------------
1. In file handling, what does this terms means “r, a”?
a) read, append
b) append, read
c) write, append
d) none of the mentioned
 Answer: a
Explanation: r- reading,  a-appending.

2. What is the use of “w” in file handling?
a) Read
b) Write
c) Append
d) None of the mentioned
 Answer: b
Explanation: This opens the file for writing. It will create the file if it doesn’t exist, and if it does, it will overwrite it.
fh = open(“filename_here”, “w”).
3. What is the use of “a” in file handling?
a) Read
b) Write
c) Append
d) None of the mentioned
 Answer: c
Explanation: This opens the fhe file in appending mode. That means, it will be open for writing and everything will be written to the end of the file.
fh =open(“filename_here”, “a”).
4. Which function is used to read all the characters?
a) Read()
b) Readcharacters()
c) Readall()
d) Readchar()
 Answer: a
Explanation: The read function reads all characters fh = open(“filename”, “r”)
content = fh.read().
5. Which function is used to read single line from file?
a) Readline()
b) Readlines()
c) Readstatement()
d) Readfullline()
 Answer: b
Explanation: The readline function reads a single line from the file fh = open(“filename”, “r”)
content = fh.readline().


6. Which function is used to write all the characters?
a) write()
b) writecharacters()
c) writeall()
d) writechar()
 Answer: a
Explanation: To write a fixed sequence of characters to a file
fh = open(“hello.txt”,”w”)
write(“Hello World”).
7. Which function is used to write a list of string in a file?
a) writeline()
b) writelines()
c) writestatement()
d) writefullline()
 Answer: a
Explanation: With the writeline function you can write a list of strings to a file
fh = open(“hello.txt”, “w”)
lines_of_text = [“a line of text”, “another line of text”, “a third line”]
fh.writelines(lines_of_text). 
8. Which function is used to close a file in python?
a) Close()
b) Stop()
c) End()
d) Closefile()
 Answer: a
Explanation: f.close()to close it and free up any system resources taken up by the open file. 
9. Is it possible to create a text file in python?
a) Yes
b) No
c) Machine dependent
d) All of the mentioned
 Answer: a
Explanation: Yes we can create a file in python. Creation of file is as shown below.
file = open(“newfile.txt”, “w”)
file.write(“hello world in the new file\n”)
file.write(“and another line\n”)
file.close().

10. Which of the following are the modes of both writing and reading in binary format in file?
a) wb+
b) w
c) wb
d) w+
 Answer: a
Explanation: Here is the description below
“w”  Opens a file for writing only. Overwrites the file if the file exists. If the file does not exist, creates a new file for writing.
“wb” Opens a file for writing only in binary format. Overwrites the file if the file exists. If the file does not exist, creates a new file for writing.
“w+” Opens a file for both writing and reading. Overwrites the existing file if the file exists. If the file does not exist, creates a new file for reading and writing.
“wb+” Opens a file for both writing and reading in binary format. Overwrites the existing file if the file exists. If the file does not exist, creates a new file for reading and writing.



-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Files – 5
-----------------------------------------------------------------------------------------------------------------
1. Which of the following is not a valid mode to open a file?
a) ab
b) rw
c) r+
d) w+
Answer: b
Explanation: Use r+, w+ or a+ to perform both read and write operations using a single file object.

2. What is the difference between r+ and w+ modes?
a) no difference
b) in r+ the pointer is initially placed at the beginning of the file and the pointer is at the end for w+
c) in w+ the pointer is initially placed at the beginning of the file and the pointer is at the end for r+
d) depends on the operating system
Answer: b
Explanation: none.
3. How do you get the name of a file from a file object (fp)?
a) fp.name
b) fp.file(name)
c) self.__name__(fp)
d) fp.__name__()
Answer: a
Explanation: name is an attribute of the file object.
4. Which of the following is not a valid attribute of a file object (fp)?
a) fp.name
b) fp.closed
c) fp.mode
d) fp.size
Answer: d
Explanation: fp.size has not been implemented.
5. How do you close a file object (fp)?
a) close(fp)
b) fclose(fp)
c) fp.close()
d) fp.__close__()
Answer: c
Explanation: close() is a method of the file object.


6. How do you get the current position within the file?
a) fp.seek()
b) fp.tell()
c) fp.loc
d) fp.pos
Answer: b
Explanation: It gives the current position as an offset from the start of file.
7. How do you rename a file?
a) fp.name = ‘new_name.txt’
b) os.rename(existing_name, new_name)
c) os.rename(fp, new_name)
d) os.set_name(existing_name, new_name)
Answer: b
Explanation: os.rename() is used to rename files.
8. How do you delete a file?
a) del(fp)
b) fp.delete()
c) os.remove(‘file’)
d) os.delete(‘file’)
Answer: c
Explanation: os.remove() is used to delete files.
9. How do you change the file position to an offset value from the start?
a) fp.seek(offset, 0)
b) fp.seek(offset, 1)
c) fp.seek(offset, 2)
d) none of the mentioned
Answer: a
Explanation: 0 indicates that the offset is with respect to the start.

10. What happens if no arguments are passed to the seek function?
a) file position is set to the start of file
b) file position is set to the end of file
c) file position remains unchanged
d) error
Answer: d
Explanation: seek() takes at least one argument.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Classes and Objects – 1
-----------------------------------------------------------------------------------------------------------------
1.	_____ represents an entity in the real world with its identity and behaviour.
a)	A method
b)	An object
c)	A class
d)	An operator
Answer: b
Explanation: An object represents an entity in the real world that can be distinctly identified. A class may define an object.

2.	_____  is used to create an object.
a)	class
b)	constructor
c)	User-defined functions
d)	In-built functions
Answer: b
Explanation: The values assigned by the constructor to the class members is used to create the object.
3.	What will be the output of the following Python code?
class test:
     def __init__(self,a="Hello World"):
         self.a=a
 
     def display(self):
         print(self.a)
obj=test()
obj.display()
a)	The program has an error because constructor can’t have default arguments
b)	Nothing is displayed
c)	“Hello World” is displayed
d)	The program has an error display function doesn’t have parameters
Answer: c
Explanation: The program has no error. “Hello World” is displayed. Execute in python shell to verify.
4.	What is setattr() used for?
a)	To access the attribute of the object
b)	To set an attribute
c)	To check if an attribute exists or not
d)	To delete an attribute
Answer: b
Explanation: setattr(obj,name,value) is used to set an attribute. If attribute doesn’t exist, then it would be created.
5.	What is getattr() used for?
a)	To access the attribute of the object
b)	To delete an attribute
c)	To check if an attribute exists or not
d)	To set an attribute
Answer: a
Explanation: getattr(obj,name) is used to get the attribute of an object.


6. What will be the output of the following Python code?
class change:
    def __init__(self, x, y, z):
        self.a = x + y + z
 
x = change(1,2,3)
y = getattr(x, 'a')
setattr(x, 'a', y+1)
print(x.a)
a)	6
b)	7
c)	Error
d)	0
Answer: b
Explanation: First, a=1+2+3=6. Then, after setattr() is invoked, x.a=6+1=7.
7. What will be the output of the following Python code?
 class test:
     def __init__(self,a):
         self.a=a
 
     def display(self):
         print(self.a)
obj=test()
obj.display()
a)	Runs normally, doesn’t display anything
b)	Displays 0, which is the automatic default value
c)	Error as one argument is required while creating the object
d)	Error as display function requires additional argument
Answer: c
Explanation: Since, the __init__ special method has another argument a other than self, during object creation, one argument is required. For example: obj=test(“Hello”)
8.  Is the following Python code correct?

>>> class A:
	def __init__(self,b):
		self.b=b
	def display(self):
		print(self.b)
>>> obj=A("Hello")
>>> del obj
a)	True
b)	False
Answer: a
Explanation: It is possible to delete an object of the class. On further typing obj in the python shell, it throws an error because the defined object has now been deleted.
9. What will be the output of the following Python code?
class test:
    def __init__(self):
        self.variable = 'Old'
        self.Change(self.variable)
    def Change(self, var):
        var = 'New'
obj=test()
print(obj.variable)
a)	Error because function change can’t be called in the __init__ function
b)	‘New’ is printed
c)	‘Old’ is printed
d)	Nothing is printed
Answer: c
Explanation: This is because strings are immutable. Hence any change made isn’t reflected in the original string.
10. What is Instantiation in terms of OOP terminology?
a)	Deleting an instance of class
b)	Modifying an instance of class
c)	Copying an instance of class
d)	Creating an instance of class
Answer: d
Explanation: Instantiation refers to creating an object/instance for a class.
11.  What will be the output of the following Python code?
class fruits:
    def __init__(self, price):
        self.price = price
obj=fruits(50)
 
obj.quantity=10
obj.bags=2
 
print(obj.quantity+len(obj.__dict__))
a)	12
b)	52
c)	13
d)	60
Answer: c
Explanation: In the above code, obj.quantity has been initialised to 10. There are a total of three items in the dictionary, price, quantity and bags. Hence, len(obj.__dict__) is 3.

12.  What will be the output of the following Python code?
 class Demo:
    def __init__(self):
        pass
 
    def test(self):
        print(__name__)
 
obj = Demo()
obj.test()
a)	Exception is thrown
b)	__main__
c)	Demo
d)	test
Answer: b
Explanation: Since the above code is being run not as a result of an import from another module, the variable will have value “__main__”.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Classes and Objects – 2
-----------------------------------------------------------------------------------------------------------------
1.	The assignment of more than one function to a particular operator is _______
a)	Operator over-assignment
b)	Operator overriding
c)	Operator overloading
d)	Operator instance
Answer: c
Explanation: The assignment of more than one function to a particular operator is called as operator overloading.

2.	Which of the following is not a class method?
a)	Non-static
b)	Static
c)	Bounded
d)	Unbounded
Answer: a
Explanation: The three different class methods in Python are static, bounded and unbounded methods.
3. What will be the output of the following Python code?
def add(c,k):
    c.test=c.test+1
    k=k+1
class A:
    def __init__(self):
        self.test = 0
def main():
    Count=A()
    k=0
 
    for i in range(0,25):
        add(Count,k)
    print("Count.test=", Count.test)
    print("k =", k)
main()
a) Exception is thrown
b) 
Count.test=25

k=25
c) 
Count.test=25

k=0
d) 
Count.test=0

k=0
Answer: c
Explanation: The program has no error. Here, test is a member of the class while k isn’t. Hence test keeps getting incremented 25 time while k remains 0.
  


4.  Which of the following Python code creates an empty class?
a)
class A:
    return
b)
class A:
    pass
c)
class A:
d) It is not possible to create an empty class
Answer: b
Explanation: Execute in python shell to verify.

5.	Is the following Python code valid?
class B(object):
  def first(self):
    print("First method called")
  def second():
    print("Second method called")
ob = B()
B.first(ob)
a)	It isn’t as the object declaration isn’t right
b)	It isn’t as there isn’t any __init__ method for initializing class members
c)	Yes, this method of calling is called unbounded method call
d)	Yes, this method of calling is called bounded method call
Answer: c
Explanation: The method may be created in the method demonstrated in the code as well and this is called as the unbounded method call. Calling the method using obj.one() is the bounded method call.
6.  What are the methods which begin and end with two underscore characters called?
a)	Special methods
b)	In-built methods
c)	User-defined methods
d)	Additional methods
Answer: a
Explanation: Special methods like __init__ begin and end with two underscore characters.
7.  Special methods need to be explicitly called during object creation.
a)	True
b)	False
Answer: b
Explanation: Special methods are automatically called during object creation.
8.  What will be the output of the following Python code?
>>> class demo():
	def __repr__(self):
		return '__repr__ built-in function called'
	def __str__(self):
		return '__str__ built-in function called'
>>> s=demo()
>>> print(s)
a)	Error
b)	Nothing is printed
c)	__str__ called
d)	__repr__ called
Answer: c
Explanation: __str__ is used for producing a string representation of an object’s value that Python can evaluate. Execute in python shell to verify.

9. What will be the output of the following Python code?
>>> class demo():
	def __repr__(self):
		return '__repr__ built-in function called'
	def __str__(self):
		return '__str__  built-in function called'
>>> s=demo()
>>> print(s)
a)	__str__ called
b)	__repr__ called
c)	Error
d)	Nothing is printed
Answer: a
Explanation: __str__ is used for producing a string representation of an object’s value that is most readable for humans. Execute in python shell to verify.
10.	What is hasattr(obj,name) used for?
a)	To access the attribute of the object
b)	To delete an attribute
c)	To check if an attribute exists or not
d)	To set an attribute
Answer: c
Explanation: hasattr(obj,name) checks if an attribute exists or not and returns True or False.
11. What will be the output of the following Python code?
class stud:
   def __init__(self, roll_no, grade):
      self.roll_no = roll_no
      self.grade = grade
   def display (self):
      print("Roll no : ", self.roll_no,  ", Grade: ", self.grade)
stud1 = stud(34, 'S')
stud1.age=7
print(hasattr(stud1, 'age'))
a)	Error as age isn’t defined
b)	True
c)	False
d)	7
Answer: b
Explanation: Execute in python shell to verify.
12.	What is delattr(obj,name) used for?
a)	To print deleted attribute
b)	To delete an attribute
c)	To check if an attribute is deleted or not
d)	To set an attribute
Answer: b
Explanation: delattr(obj,name) deletes an attribute in a class.
13.	__del__ method is used to destroy instances of a class.
a)	True
b)	False
Answer: a
Explanation:  ___del__ method acts as a destructor and is used to destroy objects of classes.
14. What will be the output of the following Python code?
class stud:
   ‘Base class for all students’
   def __init__(self, roll_no, grade):
      self.roll_no = roll_no
      self.grade = grade
   def display (self):
      print("Roll no : ", self.roll_no,  ", Grade: ", self.grade)
print(student.__doc__)
a)	Exception is thrown
b)	__main__
c)	Nothing is displayed
d)	Base class for all students
Answer: d
Explanation:  ___doc__ built-in class attribute is used to print the class documentation string or none, if undefined.
15.	What does print(Test.__name__) display (assuming Test is the name of the class)?
a)	()
b)	Exception is thrown
c)	Test
d)	__main__
Answer: c
Explanation:  __name__ built-in class attribute is used to display the class name.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Inheritance – 1
-----------------------------------------------------------------------------------------------------------------
1.  Which of the following best describes inheritance?
a)	Ability of a class to derive members of another class as a part of its own definition
b)	Means of bundling instance variables and methods in order to restrict access to certain class members
c)	Focuses on variables and passing of variables to functions
d)	Allows for implementation of elegant software that is well designed and easily modified
Answer: a
Explanation: If the class definition is class B(A): then class B inherits the methods of class A. This is called inheritance.

2.	Which of the following statements is wrong about inheritance?
a)	Protected members of a class can be inherited
b)	The inheriting class is called a subclass
c)	Private members of a class can be inherited and accessed
d)	Inheritance is one of the features of OOP
Answer: c
Explanation: Any changes made to the private members of the class in the subclass aren’t reflected in the original members.
3. What will be the output of the following Python code?
class Demo:
    def __new__(self):
        self.__init__(self)
        print("Demo's __new__() invoked")
    def __init__(self):
        print("Demo's __init__() invoked")
class Derived_Demo(Demo):
    def __new__(self):
        print("Derived_Demo's __new__() invoked")
    def __init__(self):
        print("Derived_Demo's __init__() invoked")
def main():
    obj1 = Derived_Demo()
    obj2 = Demo()
main()
a) 
Derived_Demo’s __init__() invoked

Derived_Demo's __new__() invoked

Demo's __init__() invoked

Demo's __new__() invoked
b) 
Derived_Demo's __new__() invoked

Demo's __init__() invoked

Demo's __new__() invoked
c) 
Derived_Demo's __new__() invoked

Demo's __new__() invoked


d) 
Derived_Demo’s __init__() invoked

Demo's __init__() invoked
Answer: b
Explanation: Since the object for the derived class is declared first, __new__() method of the derived class is invoked first, followed by the constructor and the __new__() method of main class.
  
4. What will be the output of the following Python code?
class Test:
    def __init__(self):
        self.x = 0
class Derived_Test(Test):
    def __init__(self):
        self.y = 1
def main():
    b = Derived_Test()
    print(b.x,b.y)
main()
a)	0 1
b)	0 0
c)      Error because class B inherits A but variable x isn’t inherited
d)	Error because when object is created, argument must be passed like Derived_Test(1)
Answer: c
Explanation: Since the invoking method, Test.__init__(self), isn’t present in the derived class, variable x can’t be inherited.
5. What will be the output of the following Python code?
class A():
    def disp(self):
        print("A disp()")
class B(A):
    pass
obj = B()
obj.disp()
a)	Invalid syntax for inheritance
b)	Error because when object is created, argument must be passed
c)	Nothing is printed
d)	A disp()
Answer: d
Explanation: Class B inherits class A hence the function disp () becomes part of class B’s definition. Hence disp() method is properly executed and the line is printed.

6.  All subclasses are a subtype in object-oriented programming.
a)	True
b)      False
Answer: b
Explanation: A subtype is something that be substituted for and behave as its parent type. All subclass may not be a subtype in object-oriented programming.
7.  When defining a subclass in Python that is meant to serve as a subtype, the subtype Python keyword is used.
a)	True
b)	False
Answer: b
Explanation: B is a subtype of B if instances of type B can substitute for instances of type A without affecting semantics.
8.  Suppose B is a subclass of A, to invoke the __init__ method in A from B, what is the line of code you should write?
a)	A.__init__(self)
b)	B.__init__(self)
c)	A.__init__(B)
d)	B.__init__(A)
Answer: a
Explanation: To invoke the __init__ method in A from B, either of the following should be written: A.__init__(self) or super().__init__(self).
9. What will be the output of the following Python code?
class Test:
    def __init__(self):
        self.x = 0
class Derived_Test(Test):
    def __init__(self):
        Test.__init__(self)
        self.y = 1
def main():
    b = Derived_Test()
    print(b.x,b.y)
main()
a)	Error because class B inherits A but variable x isn’t inherited
b)	0 0
c)	0 1
d)	Error, the syntax of the invoking method is wrong
Answer: c
Explanation: Since the invoking method has been properly invoked, variable x from the main class has been properly inherited and it can also be accessed.
10.  What will be the output of the following Python code?
class A:
    def __init__(self, x= 1):
        self.x = x
class der(A):
    def __init__(self,y = 2):
        super().__init__()
        self.y = y
def main():
    obj = der()
    print(obj.x, obj.y)
main()
a)	Error, the syntax of the invoking method is wrong
b)	The program runs fine but nothing is printed
c)	1 0
d)	1 2
Answer: d
Explanation: In the above piece of code, the invoking method has been properly implemented and hence x=1 and y=2. 

11.  What does built-in function type do in context of classes?
a)	Determines the object name of any value
b)	Determines the class name of any value
c)	Determines class description of any value
d)	Determines the file name of any value
Answer: b
Explanation: For example: >>> type((1,)) gives <class ‘tuple’>.
12.  Which of the following is not a type of inheritance?
a)	Double-level
b)	Multi-level
c)	Single-level
d)	Multiple
Answer: a
Explanation: Multiple, multi-level, single-level and hierarchical inheritance are all types of inheritance. 
13.  What does built-in function help do in context of classes?
a)	Determines the object name of any value
b)	Determines the class identifiers of any value
c)	Determines class description of any built-in type
d)	Determines class description of any user-defined built-in type
Answer: c
Explanation: help() usually gives information of the class on any built-in type or function.
14. What will be the output of the following Python code?
class A:
    def one(self):
        return self.two()
 
    def two(self):
        return 'A'
 
class B(A):
    def two(self):
        return 'B'
obj1=A()
obj2=B()
print(obj1.two(),obj2.two())
a)	A A
b)	A B
c)	B B
d)	An exception is thrown
Answer: b
Explanation: obj1.two() invokes the method two() in class A which returns ‘A’ and obj2.two() invokes the  method two() in class B which returns ‘B’.
15.  What type of inheritance is illustrated in the following Python code?
class A():
    pass
class B():
    pass
class C(A,B):
    pass
a)	Multi-level inheritance
b)	Multiple inheritance
c)	Hierarchical inheritance
d)	Single-level inheritance
Answer: b
Explanation: In multiple inheritance, two or more subclasses are derived from the superclass as shown in the above piece of code.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Polymorphism
-----------------------------------------------------------------------------------------------------------------
1.  Which of the following best describes polymorphism?
a)	Ability of a class to derive members of another class as a part of its own definition
b)	Means of bundling instance variables and methods in order to restrict access to certain class members
c)	Focuses on variables and passing of variables to functions
d)	Allows for objects of different types and behaviour to be treated as the same general type
Answer: d
Explanation: Polymorphism is a feature of object-oriented programming languages. It allows for the implementation of elegant software that is well designed and easily modified.

2.	What is the biggest reason for the use of polymorphism?
a)	It allows the programmer to think at a more abstract level
b)	There is less program code to write
c)	The program will have a more elegant design and will be easier to maintain and update
d)	Program code takes up less space
Answer: c
Explanation: Polymorphism allows for the implementation of elegant software.
3.	What is the use of duck typing?
a)	More restriction on the type values that can be passed to a given method
b)	No restriction on the type values that can be passed to a given method
c)	Less restriction on the type values that can be passed to a given method
d)	Makes the program code smaller
Answer: c
Explanation: In Python, any set of classes with a common set of methods can be treated similarly. This is called duck typing. Hence duck typing imposes less restrictions.
4. What will be the output of the following Python code?
class A:
    def __str__(self):
        return '1'
class B(A):
    def __init__(self):
        super().__init__()
class C(B):
    def __init__(self):
        super().__init__()
def main():
    obj1 = B()
    obj2 = A()
    obj3 = C()
    print(obj1, obj2,obj3)
main()
a)	1 1 1
b)	1 2 3
c)	‘1’ ‘1’ ‘1’
d)	An exception is thrown
Answer: a
Explanation: The super().__init__() in the subclasses has been properly invoked and none of other subclasses return any other value. Hence 1 is returned each time the object is created and printed.
5. What will be the output of the following Python code?


class Demo:
    def __init__(self):
        self.x = 1
    def change(self):
        self.x = 10
class Demo_derived(Demo):
    def change(self):
        self.x=self.x+1
        return self.x
def main():
    obj = Demo_derived()
    print(obj.change())
 
main()
a)	11
b)	2
c)	1
d)	An exception is thrown
Answer: b
Explanation: The derived class method change() overrides the base class method.
6.  A class in which one or more methods are only implemented to raise an exception is called an abstract class.
a)	True
b)	False
Answer: a
Explanation: A class in which one or more methods are unimplemented or implemented for the methods throw an exception is called an abstract class.
7.  Overriding means changing behaviour of methods of derived class methods in the base class.
a)	True
b)	False
Answer: b
Explanation: Overriding means if there are two same methods present in the superclass and the subclass, the contents of the subclass method are executed.
8. What will be the output of the following Python code?
class A:
    def __repr__(self):
        return "1"
class B(A):
    def __repr__(self):
        return "2"
class C(B):
    def __repr__(self):
        return "3"
o1 = A()
o2 = B()
o3 = C()
print(obj1, obj2, obj3)
a)	1 1 1
b)	1 2 3
c)	‘1’ ‘1’ ‘1’
d)	An exception is thrown
Answer: b
Explanation: When different objects are invoked, each of the individual classes return their individual values and hence it is printed.

9. What will be the output of the following Python code?
class A:
    def __init__(self):
        self.multiply(15)
        print(self.i)
 
    def multiply(self, i):
        self.i = 4 * i;
class B(A):
    def __init__(self):
        super().__init__()
 
    def multiply(self, i):
        self.i = 2 * i;
obj = B()
a)	15
b)	60
c)	An exception is thrown
d)	30
Answer: d
Explanation: The derived class B overrides base class A.
10. What will be the output of the following Python code?
class Demo:
    def check(self):
        return " Demo's check "  
    def display(self):
        print(self.check())
class Demo_Derived(Demo):
    def check(self):
        return " Derived's check "
Demo().display()
Demo_Derived().display()
a)	Demo’s check Derived’s check
b)	Demo’s check Demo’s check
c)	Derived’s check Demo’s check
d)	Syntax error
Answer: a
Explanation: Demo().display() invokes the display() method in class Demo and Demo_Derived().display() invokes the display() method in class Demo_Derived. 
11. What will be the output of the following Python code?
class A:
    def __init__(self):
        self.multiply(15)
    def multiply(self, i):
        self.i = 4 * i;
class B(A):
    def __init__(self):
        super().__init__()
        print(self.i)
 
    def multiply(self, i):
        self.i = 2 * i;
obj = B()
a)	15
b)	30
c)	An exception is thrown
d)	60
Answer: b
Explanation: The derived class B overrides base class A.

12. What will be the output of the following Python code?
class Demo:
    def __check(self):
        return " Demo's check "
    def display(self):
        print(self.check())
class Demo_Derived(Demo):
    def __check(self):
        return " Derived's check "
Demo().display()
Demo_Derived().display()
a)	Demo’s check Derived’s check
b)	Demo’s check Demo’s check
c)	Derived’s check Demo’s check
d)	Syntax error
Answer: b
Explanation: The method check is private so it can’t be accessed by the derived class. Execute the code in the Python shell. 
13. What will be the output of the following Python code?
class A:
    def __init__(self, x, y):
        self.x = x
        self.y = y
    def __str__(self):
        return 1
    def __eq__(self, other):
        return self.x * self.y == other.x * other.y
obj1 = A(5, 2)
obj2 = A(2, 5)
print(obj1 == obj2)
a)	False
b)	1
c)	True
d)	An exception is thrown
Answer: c
Explanation: Since 5*2==2*5, True is printed. Execute it in the Python shell to verify.
14. What will be the output of the following Python code?
class A:
    def one(self):
        return self.two()    	
    def two(self):
        return 'A'   
class B(A):
    def two(self):
        return 'B'
obj2=B()
print(obj2.two())
a)	A
b)	An exception is thrown
c)	A B
d)	B
Answer: d
Explanation: The derived class method two() overrides the method two() in the base class A. 
15.  Which of the following statements is true?
a)	A non-private method in a superclass can be overridden
b)	A subclass method can be overridden by the superclass
c)	A private method in a superclass can be overridden
d)	Overriding isn’t possible in Python
Answer: a
Explanation: A public method in the base class can be overridden by the same named method in the subclass.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Encapsulation
-----------------------------------------------------------------------------------------------------------------
1.	Which of these is not a fundamental features of OOP?
a)	Encapsulation
b)	Inheritance
c)	Instantiation
d)	Polymorphism
Answer: c
Explanation: Instantiation simply refers to creation of an instance of class. It is not a fundamental feature of OOP.

2.	Which of the following is the most suitable definition for encapsulation?
a)	Ability of a class to derive members of another class as a part of its own definition
b)	Means of bundling instance variables and methods in order to restrict access to certain class members
c)	Focuses on variables and passing of variables to functions
d)	Allows for implementation of elegant software that is well designed and easily modified
Answer: b
Explanation: The values assigned by the constructor to the class members is used to create the object.
3. What will be the output of the following Python code?
class Demo:
    def __init__(self):
        self.a = 1
        self.__b = 1
 
    def display(self):
        return self.__b
obj = Demo()
print(obj.a)
a)      The program has an error because there isn’t any function to return self.a
b)      The program has an error because b is private and display(self) is returning a private member
c)	The program runs fine and 1 is printed
d)	The program has an error as you can’t name a class member using __b
Answer: c
Explanation: The program has no error because the class member which is public is printed. 1  is displayed. Execute in python shell to verify.
4. What will be the output of the following Python code?
class Demo:
    def __init__(self):
        self.a = 1
        self.__b = 1
 
    def display(self):
        return self.__b
 
obj = Demo()
print(obj.__b)
a)	The program has an error because there isn’t any function to return self.a
b)	The program has an error because b is private and display(self) is returning a private member
c)	The program has an error because b is private and hence can’t be printed
d)	The program runs fine and 1 is printed
Answer: c
Explanation: Variables beginning with two underscores are said to be private members of the class and they can’t be accessed directly.


5.	Methods of a class that provide access to private members of the class are called as ______ and ______
a)	getters/setters
b)	__repr__/__str__
c)	user-defined functions/in-built functions
d)	__init__/__del__
Answer: a
Explanation: The purpose of getters and setters is to get(return) and set(assign) private instance variables of a class.
6.  Which of these is a private data field?
def Demo:
def __init__(self):
    __a = 1
    self.__b = 1
    self.__c__ = 1
    __d__= 1
a)	__a
b)	__b
c)	__c__
d)	__d__
Answer: b
Explanation: Variables such as self.__b are private members of the class.
7. What will be the output of the following Python code?
class Demo:
     def __init__(self):
         self.a = 1
         self.__b = 1
 
     def get(self):
         return self.__b
 
obj = Demo()
print(obj.get())
a)	The program has an error because there isn’t any function to return self.a
b)	The program has an error because b is private and display(self) is returning a private member
c)	The program has an error because b is private and hence can’t be printed
d)	The program runs fine and 1 is printed
Answer: d
Explanation: Here, get(self) is a member of the class. Hence, it can even return a private member of the class. Because of this reason, the program runs fine and 1 is printed.

8. What will be the output of the following Python code?
class Demo:
     def __init__(self):
         self.a = 1
         self.__b = 1
     def get(self):
         return self.__b
obj = Demo()
obj.a=45
print(obj.a)
a)	The program runs properly and prints 45
b)	The program has an error because the value of members of a class can’t be changed from outside the class
c)	The program runs properly and prints 1
d)	The program has an error because the value of members outside a class can only be changed as self.a=45
Answer: a
Explanation: It is possible to change the values of public class members using the object of the class.
9.  Private members of a class cannot be accessed.
a)	True
b)	False
Answer: b
Explanation: Private members of a class are accessible if written as follows: obj._Classname__privatemember. Such renaming of identifiers is called as name mangling.
10. The purpose of name mangling is to avoid unintentional access of private class members.
a)	True
b)	False
Answer: a
Explanation: Name mangling prevents unintentional access of private members of a class, while still allowing access when needed. Unless the variable is accessed with its mangled name, it will not be found.
11. What will be the output of the following Python code?
class fruits:
    def __init__(self):
        self.price = 100
        self.__bags = 5
    def display(self):
        print(self.__bags)
obj=fruits()
obj.display()
a)	The program has an error because display() is trying to print a private class member
b)	The program runs fine but nothing is printed
c)	The program runs fine and 5 is printed
d)	The program has an error because display() can’t be accessed
Answer: c
Explanation: Private class members can be printed by methods which are members of the class.

12. What will be the output of the following Python code?
 class student:
    def __init__(self):
        self.marks = 97
        self.__cgpa = 8.7
    def display(self):
        print(self.marks)
obj=student()
print(obj._student__cgpa)
a)	The program runs fine and 8.7 is printed
b)	Error because private class members can’t be accessed
c)	Error because the proper syntax for name mangling hasn’t been implemented
d)	The program runs fine but nothing is printed
Answer: a
Explanation: Name mangling has been properly implemented in the code given above and hence the program runs properly.
13.  Which of the following is false about protected class members?
a)	They begin with one underscore
b)	They can be accessed by subclasses
c)	They can be accessed by name mangling method
d)	They can be accessed within a class
Answer: c
Explanation: Protected class members can’t be accessed by name mangling.
14. What will be the output of the following Python code?
class objects:
    def __init__(self):
        self.colour = None
        self._shape = "Circle" 
 
    def display(self, s):
        self._shape = s
obj=objects()
print(obj._objects_shape)
a)	The program runs fine because name mangling has been properly implemented
b)	Error because the member shape is a protected member
c)	Error because the proper syntax for name mangling hasn’t been implemented
d)	Error because the member shape is a private member
Answer: b
Explanation: Protected members begin with one underscore and they can only be accessed within a class or by subclasses.


-----------------------------------------------------------------------------------------------------------------

Python Questions and Answers – Exception Handling – 1
-----------------------------------------------------------------------------------------------------------------
1. How many except statements can a try-except block have?
a) zero
b) one
c) more than one
d) more than zero
Answer: d
Explanation: There has to be at least one except statement.

2. When will the else part of try-except-else be executed?
a) always
b) when an exception occurs
c) when no exception occurs
d) when an exception occurs in to except block
Answer: c
Explanation: The else part is executed when no exception occurs.
3. Is the following Python code valid?
try:
    # Do something
except:
    # Do something
finally:
    # Do something
a) no, there is no such thing as finally
b) no, finally cannot be used with except
c) no, finally must come before except
d) yes
Answer: b
Explanation: Refer documentation.


4. Is the following Python code valid?
try:
    # Do something
except:
    # Do something
else:
    # Do something
a) no, there is no such thing as else
b) no, else cannot be used with except
c) no, else must come before except
d) yes
Answer: d
Explanation: Refer documentation.
5. Can one block of except statements handle multiple exception?
a) yes, like except TypeError, SyntaxError [,…] 
b) yes, like except [TypeError, SyntaxError] 
c) no
d) none of the mentioned
Answer: a
Explanation: Each type of exception can be specified directly. There is no need to put it in a list.
6. When is the finally block executed?
a) when there is no exception
b) when there is an exception
c) only if some condition that has been specified is satisfied
d) always
Answer: d
Explanation: The finally block is always executed.

7. What will be the output of the following Python code?
def foo():
    try:
        return 1
    finally:
        return 2
k = foo()
print(k)
a) 1
b) 2
c) 3
d) error, there is more than one return statement in a single try-finally block
Answer: b
Explanation: The finally block is executed even there is a return statement in the try block.
8. What will be the output of the following Python code?
def foo():
    try:
        print(1)
    finally:
        print(2)
foo()
a) 1 2
b) 1
c) 2
d) none of the mentioned
Answer: a
Explanation: No error occurs in the try block so 1 is printed. Then the finally block is executed and 2 is printed.

9. What will be the output of the following Python code?
try:
    if '1' != 1:
        raise "someError"
    else:
        print("someError has not occurred")
except "someError":
    print ("someError has occurred")
a) someError has occurred
b) someError has not occurred
c) invalid code
d) none of the mentioned
Answer: c
Explanation: A new exception class must inherit from a BaseException. There is no such inheritance here.
10. What happens when ‘1’ == 1 is executed?
a) we get a True
b) we get a False
c) an TypeError occurs
d) a ValueError occurs
Answer: b
Explanation: It simply evaluates to False and does not raise any exception.


-----------------------------------------------------------------------------------------------------------------

